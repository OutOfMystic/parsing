import asyncio
import re
from random import randint
from bs4 import BeautifulSoup

from parse_module.coroutines import AsyncSeatsParser
from parse_module.manager.proxy.check import SpecialConditions
from parse_module.manager.proxy.sessions import AsyncProxySession


class KassirParser(AsyncSeatsParser):
    proxy_check = SpecialConditions(url='https://www.kassir.ru/', max_parsers_on_ip=1)
    event = 'kassir.ru'
    url_filter = lambda event: ('kassir.ru' in event and 'crocus2' not in event and 'frame' not in event 
                                    and 'schematr' not in event)

    def __init__(self, *args, **extra):
        super().__init__(*args, **extra)
        self.delay = 6600
        self.driver_source = None

        self.count_error = 4
        self.platform = self.set_platform()
        self.headers_api = None
        self.new_venue = None

    async def before_body(self):
        self.session = AsyncProxySession(self)

    def set_platform(self):
        if 'Windows' in self.url:
            return 'Windows'
        elif 'Linux' in self.url:
            return 'Linux'
        elif 'Mac OS' in self.url:
            return 'Mac OS'
        return 'Windows'

    @staticmethod
    def reformat_megasport(a_sectors):
        megasport_reformat_dict = {  # Для схемы Танцпол и Фанзона как минимум
            'Ложа 39 (на 13 персон)': 'Ложа 39',
            'Ложа 38 (на 13 персон)': 'Ложа 38',
            'Ложа 25 (на 14 персон)': 'Ложа 25',
            'Ложа 24 (на 13 персон)': 'Ложа 24',
            'Ложа 23 (на 16 персон)': 'Ложа 23',
            'Ложа 22 (на 16 персон)': 'Ложа 22',
            'Ложа 21 (на 16 персон)': 'Ложа 21',
            'Ложа 20 (на 32 персон': 'Ложа 20',
            'Ложа 19 (на 16 персон)': 'Ложа 19',
            'Ложа 18 (на 16 персон)': 'Ложа 18',
            'Ложа 17 (на 13 персон)': 'Ложа 17',
            'Ложа 16 (на 13 персон)': 'Ложа 16',
            'Ложа 15 (на 14 персон)': 'Ложа 15',
            'Ложа 14 (на 14 персон)': 'Ложа 14',
            'Ложа 13 (на 15 персон)': 'Ложа 13',
            'Ложа 12 (на 15 персон)': 'Ложа 12',
            'Ложа 11 (на 17 персон)': 'Ложа 11',
            'Ложа 10 (на 17 персон)': 'Ложа 10',
            'Ложа 9 (на 17 персон)': 'Ложа 9',
            'Ложа 8 (на 17 персон)': 'Ложа 8',
            'Ложа 7 (на 17 персон)': 'Ложа 7',
            'Ложа 6 (на 17 персон)': 'Ложа 6',
            'Ложа 5 (на 15 персон)': 'Ложа 5',
            'Ложа 4 (на 15 персон)': 'Ложа 4',
            'Ложа 3 (на 14 персон)': 'Ложа 3',
            'Ложа 2 (на 13 персон)': 'Ложа 2',
            'Ложа 1 (на 13 персон)': 'Ложа 1',
            'VIP 3': 'VIP 3',
            'Ложа VIP 3': 'VIP 3',
            'VIP 2': 'VIP 2',
            'VIP 1': 'VIP 1',
            'Сектор A22 (1)': 'Сектор A22',
            'Сектор A21': 'Сектор A21',
            'Сектор A4  ': 'Сектор A4',
            'VIP C0': 'Сектор C0',
            'A24': 'Сектор A24',
            'A23 ': 'Сектор A23',
            'A23': 'Сектор A23',
            'A22': 'Сектор A22',
            'A21': 'Сектор A21',
            'A4  ': 'Сектор A4',
            'A4': 'Сектор A4',
            'A3': 'Сектор A3',
            'А3': 'Сектор A3',
            'A2': 'Сектор A2',
            'A1': 'Сектор A1',
            'A0': 'Сектор A0',
            'B24': 'Сектор B24',
            'B23': 'Сектор B23',
            'B22': 'Сектор B22',
            'B21': 'Сектор B21',
            'B4': 'Сектор B4',
            'B3': 'Сектор B3',
            'B2': 'Сектор B2',
            'B1': 'Сектор B1',
            'C24': 'Сектор C24',
            'C23': 'Сектор C23',
            'C22': 'Сектор C22',
            'C21': 'Сектор C21',
            'C4': 'Сектор C4',
            'C3': 'Сектор C3',
            'C2': 'Сектор C2',
            'С2': 'Сектор C2',
            'C1': 'Сектор C1',
            'C0': 'Сектор C0',
            'Фан-зона': 'Фан-зона',
            'Танцевальный партер': 'Танцпол',
            'Танцпартер': 'Танцпол',
            'Ложа 39 (на 13 персон)': 'Ложа 39',
            'Ложа 38 (на 13 персон)': 'Ложа 38',
            'Ложа 25 (на 14 персон)': 'Ложа 25',
            'Ложа 24 (на 13 персон)': 'Ложа 24',
            'Ложа 23 (на 16 персон)': 'Ложа 23',
            'Ложа 22 (на 16 персон)': 'Ложа 22',
            'Ложа 21 (на 16 персон)': 'Ложа 21',
            'Ложа 20 (на 32 персон': 'Ложа 20',
            'Ложа 19 (на 16 персон)': 'Ложа 19',
            'Ложа 18 (на 16 персон)': 'Ложа 18',
            'Ложа 17 (на 13 персон)': 'Ложа 17',
            'Ложа 16 (на 13 персон)': 'Ложа 16',
            'Ложа 15 (на 14 персон)': 'Ложа 15',
            'Ложа 14 (на 14 персон)': 'Ложа 14',
            'Ложа 13 (на 15 персон)': 'Ложа 13',
            'Ложа 12 (на 15 персон)': 'Ложа 12',
            'Ложа 11 (на 17 персон)': 'Ложа 11',
            'Ложа 10 (на 17 персон)': 'Ложа 10',
            'Ложа 9 (на 17 персон)': 'Ложа 9',
            'Ложа 8 (на 17 персон)': 'Ложа 8',
            'Ложа 7 (на 17 персон)': 'Ложа 7',
            'Ложа 6 (на 17 персон)': 'Ложа 6',
            'Ложа 5 (на 15 персон)': 'Ложа 5',
            'Ложа 4 (на 15 персон)': 'Ложа 4',
            'Ложа 3 (на 14 персон)': 'Ложа 3',
            'Ложа 2 (на 13 персон)': 'Ложа 2',
            'Ложа 1 (на 13 персон)': 'Ложа 1',
            'VIP C0': 'Сектор C0',
            'A24': 'Сектор A24',
            'A23 ': 'Сектор A23',
            'A23': 'Сектор A23',
            'A22': 'Сектор A22',
            'A21': 'Сектор A21',
            'A4  ': 'Сектор A4',
            'A4': 'Сектор A4',
            'A3': 'Сектор A3',
            'А3': 'Сектор A3',
            'A2': 'Сектор A2',
            'A1': 'Сектор A1',
            'A0': 'Сектор A0',
            'B24': 'Сектор B24',
            'B23': 'Сектор B23',
            'B22': 'Сектор B22',
            'B21': 'Сектор B21',
            'B4': 'Сектор B4',
            'B3': 'Сектор B3',
            'B2': 'Сектор B2',
            'B1': 'Сектор B1',
            'C24': 'Сектор C24',
            'C23': 'Сектор C23',
            'C22': 'Сектор C22',
            'C21': 'Сектор C21',
            'C4': 'Сектор C4',
            'C3': 'Сектор C3',
            'C2': 'Сектор C2',
            'С2': 'Сектор C2',
            'C1': 'Сектор C1',
            'C0': 'Сектор C0',
            'Фан-зона': 'Фан-зона',
            'Танцевальный партер': 'Танцпол',
            'Танцпартер': 'Танцпол',
            'Сектор A24 Синий пандус': 'Сектор A24',
            'Сектор A23 Синий пандус': 'Сектор A23',
            'Сектор A22 Синий пандус': 'Сектор A22',
            'Сектор A21 Синий пандус': 'Сектор A21',
            'Сектор A4 Синий пандус': 'Сектор A4',
            'Сектор A3 Синий пандус': 'Сектор A3',
            'Сектор A2 Синий пандус': 'Сектор A2',
            'Сектор A1 Синий пандус': 'Сектор A1',
            'Сектор A0 Синий пандус': 'Сектор A0',
            'Сектор A2c Синий пандус': 'Сектор A2',
            'Сектор A3c Синий пандус': 'Сектор A3',
            'Сектор B24 Красный пандус': 'Сектор B24',
            'Сектор B23 Красный пандус': 'Сектор B23',
            'Сектор B22 Синий пандус': 'Сектор B22',
            'Сектор B21 Синий пандус': 'Сектор B21',
            'Сектор B4 Красный пандус': 'Сектор B4',
            'B4 (Фан-сектор) Красный пандус': 'Сектор B4',
            'Сектор B3 Красный пандус': 'Сектор B3',
            'Фан-сектор B3 (хозяева)': 'Сектор B3',
            'Фан-сектор B2 (хозяева)': 'Сектор B2',
            'Сектор B2 Синий пандус': 'Сектор B2',
            'Сектор B1 Синий пандус': 'Сектор B1',
            'Сектор C24 Красный пандус': 'Сектор C24',
            'Сектор C23 Красный пандус': 'Сектор C23',
            'Сектор C22 Красный пандус': 'Сектор C22',
            'Сектор C21 Красный пандус': 'СекторCС21',
            'Сектор C4 Красный пандус': 'Сектор C4',
            'Сектор C3 Красный пандус': 'Сектор C3',
            'Сектор C2 Красный пандус': 'Сектор C2',
            'Сектор C1 Красный пандус': 'Сектор C1',
            'Сектор C0 Красный пандус': 'Сектор C0',
            'Сектор C2c Красный пандус': 'Сектор C2',
            'Сектор C3c Красный пандус': 'Сектор C3',
            'Сектор D24 Синий пандус': 'Сектор D24',
            'Сектор D23 Синий пандус': 'Сектор D23',
            'Сектор D22 Красный пандус': 'Сектор D22',
            'Сектор D21 Красный пандус': 'Сектор D21',
            'Сектор D4 Синий пандус': 'Сектор D4',
            'Сектор D3 Синий пандус': 'Сектор D3',
            'Фан-сектор D3 (гости)': 'Сектор D3',
            'Фан-сектор D2 (гости)': 'Сектор D2',
            'Сектор D2 Красный пандус': 'Сектор D2',
            'Сектор D1 Красный пандус': 'Сектор D1',
            'АП': 'Партер АП',
            'Сектор АП': 'Партер АП',
            'Hollywood': 'Партер Hollywood',
            'Сектор D0': 'Партер D0',
            'Сектор B0': 'Партер B0',
            'Партер VIP 1': 'VIP-партер 1',
            'Партер VIP 2': 'VIP-партер 2',
            'Партер VIP 3': 'VIP-партер 3',
            'Партер VIP 4': 'VIP-партер 4',
            'Партер VIP 5': 'VIP-партер 5',
            'Партер VIP 6': 'VIP-партер 6',
            'Партер VIP 7': 'VIP-партер 7',
            'Партер VIP 8': 'VIP-партер 8',
            'Партер VIP 9': 'VIP-партер 9',
            'Партер VIP 10': 'VIP-партер 10',
            'С0': 'Сектор C0',
            'D0': 'Сектор D1',
            'D1': 'Сектор D1',
            'D2': 'Сектор D2',
            'D4': 'Сектор D4',
            'D3': 'Сектор D3',
            'D21': 'Сектор D21',
            'D22': 'Сектор D22',
            'D24': 'Сектор D24',
            'D23': 'Сектор D23',
        }
        a_sectors_new = {}
        for sector, tickets in a_sectors.items():
            if megasport_reformat_dict.get(sector):
                a_sectors_new.setdefault(megasport_reformat_dict.get(sector), {}).update(tickets)
            else:
                a_sectors_new.setdefault(sector, {}).update(tickets)
        return a_sectors_new

    @staticmethod
    def reformat_vtb_for_dynamo(a_sectors):
        vtb_hockey_reformat_dict = {
            'Ресторан Platinum': 'Трибуна Юрзинова. Ресторан Platinum',
            'Press 3': 'Трибуна Давыдова. Press 3',
            'Press 2': 'Трибуна Давыдова. Press 2',
            'Ложа A1': 'Трибуна Давыдова. Ложа A1',
            'Ложа A2': 'Трибуна Давыдова. Ложа A2',
            'Ложа A3': 'Трибуна Давыдова. Ложа A3',
            'Ложа A4': 'Трибуна Давыдова. Ложа A4',
            'Ложа A18': 'Трибуна Юрзинова. Ложа A18',
            'Ложа A17': 'Трибуна Васильева. Ложа A17',
            'Ложа A16': 'Трибуна Васильева. Ложа A16',
            'Ложа A15': 'Трибуна Васильева. Ложа A15',
            'Ложа A14': 'Трибуна Васильева. Ложа A14',
            'Ложа A13': 'Трибуна Васильева. Ложа A13',
            'Ложа A12': 'Трибуна Васильева. Ложа A12',
            'Ложа A11': 'Трибуна Васильева. Ложа A11',
            'Ложа A10': 'Трибуна Васильева. Ложа A10',
            'Ложа A9': 'Трибуна Васильева. Ложа A9',
            'Ложа A8': 'Трибуна Васильева. Ложа A8',
            'Ложа A7': 'Трибуна Васильева. Ложа A7',
            'Ложа A6': 'Трибуна Васильева. Ложа A6',
            'Ложа A19': 'Трибуна Юрзинова. Ложа A19/20',
            'Ложа A20': 'Трибуна Юрзинова. Ложа A19/20',
            'Press 1': 'Трибуна Давыдова. Press 1',
            'Ложа A21': 'Трибуна Юрзинова. Ложа A21',
            'Ложа A22': 'Трибуна Юрзинова. Ложа A22',
            'Ложа B1': 'Трибуна Юрзинова. Ложа B1',
            'Ложа B2': 'Трибуна Юрзинова. Ложа B2',
            'Ложа B3': 'Трибуна Юрзинова. Ложа B3',
            'Ложа B4': 'Трибуна Юрзинова. Ложа B4',
            'Ложа B5': 'Трибуна Юрзинова. Ложа B5',
            'Ложа B6': 'Трибуна Мальцева. Ложа B6',
            'Ложа B7': 'Трибуна Мальцева. Ложа B7',
            'Ложа B8': 'Трибуна Мальцева. Ложа B8',
            'Ложа B9': 'Трибуна Мальцева. Ложа B9',
            'Ложа B10': 'Трибуна Мальцева. Ложа B10',
            'Ложа B11': 'Трибуна Мальцева. Ложа B11',
            'Ложа B12': 'Трибуна Мальцева. Ложа B12',
            'Ложа B13': 'Трибуна Мальцева. Ложа B13',
            'Ложа B14': 'Трибуна Мальцева. Ложа B14',
            'Ложа B15': 'Трибуна Мальцева. Ложа B15',
            'Ложа B16': 'Трибуна Мальцева. Ложа B16',
            'Ложа B17': 'Трибуна Мальцева. Ложа B17',
            'Ложа B18': 'Трибуна Мальцева. Ложа B18',
            'Ложа B19': 'Трибуна Давыдова. Ложа B19',
            'Ложа B20': 'Трибуна Давыдова. Ложа B20',
            'Ложа B21': 'Трибуна Давыдова. Ложа B21',
            'Ложа B22': 'Трибуна Давыдова. Ложа B22',
            'A212. Лаунж': 'Трибуна Юрзинова. Сектор A212. Лаунж',
            'Сектор A210': 'Трибуна Васильева. Сектор A210',
            'Сектор A211': 'Трибуна Васильева. Сектор A211',
            'Сектор A212': 'Трибуна Юрзинова. Сектор A212',
            'Сектор B203': 'Трибуна Юрзинова. Сектор B203',
            'B203. Лаунж': 'Трибуна Юрзинова. Сектор B203. Лаунж',
            'Сектор B204': 'Трибуна Мальцева. Сектор B204',
            'VVIP': 'Трибуна Давыдова. VVIP',
            'Ложа A5': 'Трибуна Васильева. Ложа A5',
            'Сектор B312': 'Трибуна Давыдова. Сектор B312',
            'Сектор B311': 'Трибуна Давыдова. Сектор B311',
            'Сектор B310': 'Трибуна Давыдова. Сектор B310',
            'Сектор B309': 'Трибуна Мальцева. Сектор B309',
            'Сектор B308': 'Трибуна Мальцева. Сектор B308',
            'Сектор B307': 'Трибуна Мальцева. Сектор B307',
            'Сектор B306': 'Трибуна Мальцева. Сектор B306',
            'Сектор B305': 'Трибуна Мальцева. Сектор B305',
            'Сектор B304': 'Трибуна Мальцева. Сектор B304',
            'Сектор B303': 'Трибуна Юрзинова. Сектор B303',
            'Сектор B302': 'Трибуна Юрзинова. Сектор B302',
            'Сектор B301': 'Трибуна Юрзинова. Сектор B301',
            'Сектор B213': 'Трибуна Давыдова. Сектор B213',
            'Сектор B212': 'Трибуна Давыдова. Сектор B212',
            'Сектор B211': 'Трибуна Мальцева. Сектор B211',
            'Сектор B210': 'Трибуна Мальцева. Сектор B210',
            'Сектор B209': 'Трибуна Мальцева. Сектор B209',
            'Сектор B208': 'Трибуна Мальцева. Сектор B208',
            'Сектор B207': 'Трибуна Мальцева. Сектор B207',
            'Сектор B206': 'Трибуна Мальцева. Сектор B206',
            'Сектор B205': 'Трибуна Мальцева. Сектор B205',
            'Сектор B202': 'Трибуна Юрзинова. Сектор B202',
            'Сектор B201': 'Трибуна Юрзинова. Сектор B201',
            'Сектор B110': 'Трибуна Давыдова. Сектор B110',
            'Сектор B109': 'Трибуна Давыдова. Сектор B109',
            'Сектор B108': 'Трибуна Мальцева. Сектор B108',
            'Сектор B107': 'Трибуна Мальцева. Сектор B107',
            'Сектор B106': 'Трибуна Мальцева. Сектор B106',
            'Сектор B105': 'Трибуна Мальцева. Сектор B105',
            'Сектор B104': 'Трибуна Мальцева. Сектор B104',
            'Сектор B103': 'Трибуна Юрзинова. Сектор B103',
            'Сектор B102': 'Трибуна Юрзинова. Сектор B102',
            'Сектор B101': 'Трибуна Юрзинова. Сектор B101',
            'Сектор A312': 'Трибуна Юрзинова. Сектор A312',
            'Сектор A311': 'Трибуна Юрзинова. Сектор A311',
            'Сектор A310': 'Трибуна Юрзинова. Сектор A310',
            'Сектор A309': 'Трибуна Васильева. Сектор A309',
            'Сектор A308': 'Трибуна Васильева. Сектор A308',
            'Сектор A307': 'Трибуна Васильева. Сектор A307',
            'Сектор A306': 'Трибуна Васильева. Сектор A306',
            'Сектор A305': 'Трибуна Васильева. Сектор A305',
            'Сектор A304': 'Трибуна Васильева. Сектор A304',
            'Сектор A303': 'Трибуна Давыдова. Сектор A303',
            'Сектор A302': 'Трибуна Давыдова. Сектор A302',
            'Сектор A301': 'Трибуна Давыдова. Сектор A301',
            'Сектор A213': 'Трибуна Юрзинова. Сектор A213',
            'Сектор A209': 'Трибуна Васильева. Сектор A209',
            'Сектор A208': 'Трибуна Васильева. Сектор A208',
            'Сектор A207': 'Трибуна Васильева. Сектор A207',
            'Сектор A206': 'Трибуна Васильева. Сектор A206',
            'Сектор A205': 'Трибуна Васильева. Сектор A205',
            'Сектор A204': 'Трибуна Васильева. Сектор A204',
            'Сектор A203': 'Трибуна Давыдова. Сектор A203',
            'Сектор A202': 'Трибуна Давыдова. Сектор A202',
            'Сектор A201': 'Трибуна Давыдова. Сектор A201',
            'Сектор A110': 'Трибуна Юрзинова. Сектор A110',
            'Сектор A109': 'Трибуна Юрзинова. Сектор A109',
            'Сектор A108': 'Трибуна Васильева. Сектор A108',
            'Сектор A107': 'Трибуна Васильева. Сектор A107',
            'Сектор A106': 'Трибуна Васильева. Сектор A106',
            'Сектор A105': 'Трибуна Васильева. Сектор A105',
            'Сектор A104': 'Трибуна Васильева. Сектор A104',
            'Сектор A103': 'Трибуна Давыдова. Сектор A103',
            'Сектор A102': 'Трибуна Давыдова. Сектор A102',
            'Сектор A101': 'Трибуна Давыдова. Сектор A101',
        }
        a_sectors_new = {}
        for sector, tickets in a_sectors.items():
            if 'Сектор Сектор' in sector:
                sector = sector.split()[-1]
                sector = f"Сектор {sector.split('Сектор')[-1]}"
            if vtb_hockey_reformat_dict.get(sector):
                a_sectors_new.setdefault(vtb_hockey_reformat_dict.get(sector), {}).update(tickets)
            else:
                a_sectors_new.setdefault(sector, {}).update(tickets)
        return a_sectors_new

    @staticmethod
    def reformat_vtb_arena_fotball(a_sectors):
        a_sectors_new = {}
        for sector, tickets in a_sectors.items():
            sector = ''.join(sector.split(' ', 1))
            vip_box = ['A5','C2','C3','A12','A11','A4','C11','C13','A6','C8','A7','A1','C5','A3',
                       'C7','A2','C6','A10','C14','C1','A8','C9','C4','C12']
            if sector in vip_box:
                sector = f"VIP {sector}"
            elif 'Gastrobar' in sector:
                sector = 'Сектор C205'
            else:
                sector = f"Сектор {sector}"
            a_sectors_new.setdefault(sector, {}).update(tickets)
        return a_sectors_new

    @staticmethod
    def reformat_vtb_arena(a_sectors):
        vtb_reformat_dict = {
            'Press 3': 'Press 3',
            'Press 2': 'Press 2',
            'Press 1': 'Press 1',
            'Ложа A1': 'Ложа A1',
            'Ложа A2': 'Ложа A2',
            'Ложа A3': 'Ложа A3',
            'Ложа A4': 'Ложа A4',
            'Ложа A18': 'Ложа A18',
            'Ложа A17': 'Ложа A17',
            'Ложа A16': 'Ложа A16',
            'Ложа A15': 'Ложа A15',
            'Ложа A14': 'Ложа A14',
            'Ложа A13': 'Ложа A13',
            # 'Ложа A12': 'VIP A12',
            'Ложа A12': 'Ложа A12',
            'Ложа A11': 'Ложа A11',
            'Ложа A10': 'Ложа A10',
            'Ложа A10 (9 персон)': 'Ложа A10',
            'Ложа A9': 'Ложа A9',
            'Ложа A8': 'Ложа A8',
            'Ложа A7': 'Ложа A7',
            'Ложа A7 (6 персон)': 'Ложа A7',
            'Ложа A6': 'Ложа A6',
            'Ложа A19/20': 'Ложа A19/20',
            'Ложа A21': 'Ложа A21',
            'Ложа A22': 'Ложа A22',
            'Ложа B1': 'Ложа B1',
            'Ложа B2': 'Ложа B2',
            'Ложа B3': 'Ложа B3',
            'Ложа B4': 'Ложа B4',
            'Ложа B5': 'Ложа B5',
            'Ложа B6': 'Ложа B6',
            'Ложа B7': 'Ложа B7',
            'Ложа B8': 'Ложа B8',
            'Ложа B9': 'Ложа B9',
            'Ложа B10': 'Ложа B10',
            'Ложа B11': 'Ложа B11',
            'Ложа B12': 'Ложа B12',
            'Ложа B13': 'Ложа B13',
            'Ложа B14': 'Ложа B14',
            'Ложа B15': 'Ложа B15',
            'Ложа B16': 'Ложа B16',
            'Ложа B17': 'Ложа B17',
            'Ложа B18': 'Ложа B18',
            'Ложа B19': 'Ложа B19',
            'Ложа B20': 'Ложа B20',
            'Ложа B21': 'Ложа B21',
            'Ложа B22': 'Ложа B22',
            'Сектор A212. Лаунж': 'Сектор A212. Лаунж',
            'Сектор A210': 'Сектор A210',
            'Сектор A211': 'Сектор A211',
            'Сектор A212': 'Сектор A212',
            'Сектор B203. Лаунж': 'Сектор B203. Лаунж',
            'VVIP': 'VVIP',
            'Ложа A5': 'Ложа A5',
            'Сектор B312': 'Сектор B312',
            'Сектор B311': 'Сектор B311',
            'Сектор B310': 'Сектор B310',
            'Сектор B309': 'Сектор B309',
            'Сектор B308': 'Сектор B308',
            'Сектор B307': 'Сектор B307',
            'Сектор B306': 'Сектор B306',
            'Сектор B305': 'Сектор B305',
            'Сектор B304': 'Сектор B304',
            'Сектор B303': 'Сектор B303',
            'Сектор B302': 'Сектор B302',
            'Сектор B301': 'Сектор B301',
            'Сектор B213': 'Сектор B213',
            'Сектор B212': 'Сектор B212',
            'Сектор B211': 'Сектор B211',
            'Сектор B210': 'Сектор B210',
            'Сектор B209': 'Сектор B209',
            'Сектор B208': 'Сектор B208',
            'Сектор B207': 'Сектор B207',
            'Сектор B206': 'Сектор B206',
            'Сектор B205': 'Сектор B205',
            'Сектор B204': 'Сектор B204',
            'Сектор B203': 'Сектор B203',
            'Сектор B202': 'Сектор B202',
            'Сектор B201': 'Сектор B201',
            'Сектор B110': 'Сектор B110',
            'Сектор B109': 'Сектор B109',
            'Сектор B108': 'Сектор B108',
            'Сектор B107': 'Сектор B107',
            'Сектор B106': 'Сектор B106',
            'Сектор B105': 'Сектор B105',
            'Сектор B104': 'Сектор B104',
            'Сектор B103': 'Сектор B103',
            'Сектор B102': 'Сектор B102',
            'Сектор B101': 'Сектор B101',
            'Сектор A312': 'Сектор A312',
            'Сектор A311': 'Сектор A311',
            'Сектор A310': 'Сектор A310',
            'Сектор A309': 'Сектор A309',
            'Сектор A308': 'Сектор A308',
            'Сектор A307': 'Сектор A307',
            'Сектор A306': 'Сектор A306',
            'Сектор A305': 'Сектор A305',
            'Сектор A304': 'Сектор A304',
            'Сектор A303': 'Сектор A303',
            'Сектор A302': 'Сектор A302',
            'Сектор A301': 'Сектор A301',
            'Сектор A213': 'Сектор A213',
            'Сектор A209': 'Сектор A209',
            'Сектор A208': 'Сектор A208',
            'Сектор A207': 'Сектор A207',
            'Сектор A206': 'Сектор A206',
            'Сектор A205': 'Сектор A205',
            'Сектор A204': 'Сектор A204',
            'Сектор A203': 'Сектор A203',
            'Сектор A202': 'Сектор A202',
            'Сектор A201': 'Сектор A201',
            'Сектор A110': 'Сектор A110',
            'Сектор A109': 'Сектор A109',
            'Сектор A108': 'Сектор A108',
            'Сектор A107': 'Сектор A107',
            'Сектор A106': 'Сектор A106',
            'Сектор A105': 'Сектор A105',
            'Сектор A104': 'Сектор A104',
            'Сектор A103': 'Сектор A103',
            'Сектор A102': 'Сектор A102',
            'Сектор A101': 'Сектор A101',
            'Партер, левая сторона': 'Партер, левая сторона',
            'A101 VIP пакет (фирменная футболка и ранний вход на чек)': 'Сектор A101',
            'VIP Партер - Левая сторона': 'Партер, левая сторона',
            'Партер, правая сторона': 'Партер, правая сторона',
            'Фан зона': 'Фан-зона',
            'ФАНЗОНА': 'Фан-зона',
            'Танцевальный партер': 'Танцпол',
            'ТАНЦПОЛ': 'Танцпол',
            'Ложа B22 (11 персон)': 'Ложа B22',
            'Ложа A6 (6 персон)': 'Ложа A6',
            'Ложа A5 (6 персон)': 'Ложа A5',
            'Ложа C6 (на 12 персон)': 'VIP C6 (целиком)',
            'Ложа С1 (на 13 персон)': 'VIP С1 (целиком)',
            'Ложа А10 (на 13 персон)': 'VIP A10 (целиком)',
            'B 312': 'Сектор B312',
            'B 311': 'Сектор B311',
            'B 310': 'Сектор B310',
            'B 309': 'Сектор B309',
            'B 308': 'Сектор B308',
            'B 307': 'Сектор B307',
            'B 306': 'Сектор B306',
            'B 305': 'Сектор B305',
            'B 304': 'Сектор B304',
            'B 303': 'Сектор B303',
            'B 302': 'Сектор B302',
            'B 301': 'Сектор B301',
            'B 213': 'Сектор B213',
            'B 212': 'Сектор B212',
            'B 211': 'Сектор B211',
            'B 210': 'Сектор B210',
            'B 209': 'Сектор B209',
            'B 208': 'Сектор B208',
            'B 207': 'Сектор B207',
            'B 206': 'Сектор B206',
            'B 205': 'Сектор B205',
            'B 204': 'Сектор B204',
            'B 203': 'Сектор B203',
            'B203 (ограниченная видимость)': 'Сектор B203',
            'B 202': 'Сектор B202',
            'B 201': 'Сектор B201',
            'B 110': 'Сектор B110',
            'B 109': 'Сектор B109',
            'B 108': 'Сектор B108',
            'B 107': 'Сектор B107',
            'B 106': 'Сектор B106',
            'B 105': 'Сектор B105',
            'B 104': 'Сектор B104',
            'B 103': 'Сектор B103',
            'B103 (ограниченная видимость)': 'Сектор B103',
            'B 102': 'Сектор B102',
            'B 101': 'Сектор B101',
            'A 312': 'Сектор A312',
            'A 311': 'Сектор A311',
            'A 310': 'Сектор A310',
            'A 309': 'Сектор A309',
            'A 308': 'Сектор A308',
            'A 307': 'Сектор A307',
            'A 306': 'Сектор A306',
            'A 305': 'Сектор A305',
            'A 304': 'Сектор A304',
            'A 303': 'Сектор A303',
            'A 302': 'Сектор A302',
            'A 301': 'Сектор A301',
            'A 213': 'Сектор A213',
            'A 212': 'Сектор A212',
            'A 211': 'Сектор A211',
            'A 210': 'Сектор A210',
            'A 209': 'Сектор A209',
            'A 208': 'Сектор A208',
            'A 207': 'Сектор A207',
            'A 206': 'Сектор A206',
            'A 205': 'Сектор A205',
            'A 204': 'Сектор A204',
            'A 203': 'Сектор A203',
            'A 202': 'Сектор A202',
            'A 201': 'Сектор A201',
            'A 110': 'Сектор A110',
            'A 109': 'Сектор A109',
            'A 108': 'Сектор A108',
            'A 107': 'Сектор A107',
            'A 106': 'Сектор A106',
            'A 105': 'Сектор A105',
            'A 104': 'Сектор A104',
            'A 103': 'Сектор A103',
            'A 102': 'Сектор A102',
            'A 101': 'Сектор A101',
            'B312': 'Сектор B312',
            'B311': 'Сектор B311',
            'B310': 'Сектор B310',
            'B309': 'Сектор B309',
            'B308': 'Сектор B308',
            'B307': 'Сектор B307',
            'B306': 'Сектор B306',
            'B305': 'Сектор B305',
            'B304': 'Сектор B304',
            'B303': 'Сектор B303',
            'B302': 'Сектор B302',
            'B301': 'Сектор B301',
            'B213': 'Сектор B213',
            'B212': 'Сектор B212',
            'B211': 'Сектор B211',
            'B210': 'Сектор B210',
            'B209': 'Сектор B209',
            'B208': 'Сектор B208',
            'B207': 'Сектор B207',
            'B206': 'Сектор B206',
            'B205': 'Сектор B205',
            'B204': 'Сектор B204',
            'B203': 'Сектор B203',
            'B202': 'Сектор B202',
            'B201': 'Сектор B201',
            'B110': 'Сектор B110',
            'B109': 'Сектор B109',
            'B108': 'Сектор B108',
            'B107': 'Сектор B107',
            'B106': 'Сектор B106',
            'B105': 'Сектор B105',
            'B104': 'Сектор B104',
            'B103': 'Сектор B103',
            'B102': 'Сектор B102',
            'B101': 'Сектор B101',
            'A312': 'Сектор A312',
            'A311': 'Сектор A311',
            'A310': 'Сектор A310',
            'A309': 'Сектор A309',
            'A308': 'Сектор A308',
            'A307': 'Сектор A307',
            'A306': 'Сектор A306',
            'A305': 'Сектор A305',
            'A304': 'Сектор A304',
            'A303': 'Сектор A303',
            'A302': 'Сектор A302',
            'A301': 'Сектор A301',
            'A213': 'Сектор A213',
            'A212': 'Сектор A212',
            'A211': 'Сектор A211',
            'A210': 'Сектор A210',
            'A209': 'Сектор A209',
            'A208': 'Сектор A208',
            'A207': 'Сектор A207',
            'A206': 'Сектор A206',
            'A205': 'Сектор A205',
            'A204': 'Сектор A204',
            'A203': 'Сектор A203',
            'A202': 'Сектор A202',
            'A201': 'Сектор A201',
            'A110': 'Сектор A110',
            'A109': 'Сектор A109',
            'A108': 'Сектор A108',
            'A107': 'Сектор A107',
            'A106': 'Сектор A106',
            'A105': 'Сектор A105',
            'A104': 'Сектор A104',
            'A103': 'Сектор A103',
            'A102': 'Сектор A102',
            'A101': 'Сектор A101',
            '':'', #! Внимание! это начинаются билеты на футбольную арену! 
        }
        a_sectors_new = {}
        for sector, tickets in a_sectors.items():
            #print(sector, 'a_sectors.items()')
            if 'Трибуна' in sector: #Трибуна А-303
                sector = sector.split()[-1] #А-303
                sector = sector.replace('-', '').replace('А', 'A')
                sector = sector.replace('С', 'C')
            if vtb_reformat_dict.get(sector):
                a_sectors_new.setdefault(vtb_reformat_dict.get(sector), {}).update(tickets)
            else:
                sector = sector.replace('С', 'C').replace('А', 'A')
                if 'ектор' in sector:
                    sector = sector.split()[-1]
                sector = f"Сектор {sector}"
                a_sectors_new.setdefault(sector, {}).update(tickets)
        return a_sectors_new

    def reformat(self, a_sectors, place_name):
        vk_stadium_common_reformat_dict = {
            'Танцпол': 'Танцпол',
            'Танцевальный партер': 'Танцпол',
            'Танцпартер': 'Танцпол',
            'Dancefloor': 'Танцпол',
            'Super VIP Left': 'Super VIP Left',
            'SUPER VIP left': 'Super VIP Left',
            'Super VIP Right': 'Super VIP Right',
            'SUPER VIP right': 'Super VIP Right',
            'Super VIP Center': 'Super VIP Center',
            'Super VIP center': 'Super VIP Center',
            'VIP Center': 'VIP Center',
            'VIP center': 'VIP Center',
            'VIP середина': 'VIP Center',
            'VIP Light входной': 'VIP Light входной',
            'VIP light входной': 'VIP Light входной',
            'VIP lite': 'VIP Light входной',
            'Meet & Greet VIP': 'Meet & Greet VIP',
            'Meet & Greet Standart': 'Meet & Greet Standart',
            'Подарок': 'Подарок',
            'Апгрейд (ранний вход на концерт, участие в автограф-сессии с артистами).': 'Апгрейд (ранний вход на концерт, участие в автограф-сессии с артистами).',
            'VIP Upgrade': 'VIP Upgrade',
            'Фан-зона': 'Фан-зона',
            'Барная стойка': 'Барная стойка',
            'Gold': 'Gold',
            'VIP': 'VIP',
            'Ложа №21 на 4 персоны': 'Ложа №21 на 4 персоны',
            'Ложа №20 на 4 персоны': 'Ложа №20 на 4 персоны',
            'Ложа №19 на 4 персоны': 'Ложа №19 на 4 персоны',
            'Ложа №18 на 4 персоны': 'Ложа №18 на 4 персоны',
            'Ложа №17 на 6 персон': 'Ложа №17 на 6 персон',
            'Ложа №16 на 6 персон': 'Ложа №16 на 6 персон',
            'Ложа №15 на 6 персон': 'Ложа №15 на 6 персон',
            'Ложа №14 на 6 персон': 'Ложа №14 на 6 персон',
            'Ложа №13 на 6 персон': 'Ложа №13 на 6 персон',
            'Ложа №12 на 6 персон': 'Ложа №12 на 6 персон',
            'Ложа №11 на 4 персоны': 'Ложа №11 на 4 персоны',
            'Ложа №10 на 4 персоны': 'Ложа №10 на 4 персоны',
            'Ложа №9 на 4 персоны': 'Ложа №9 на 4 персоны',
            'Ложа №8 на 4 персоны': 'Ложа №8 на 4 персоны',
            'Ложа №7 на 4 персоны': 'Ложа №7 на 4 персоны',
            'Ложа №6 на 4 персоны': 'Ложа №6 на 4 персоны',
            'Ложа №5 на 4 персоны': 'Ложа №5 на 4 персоны',
            'Ложа №4 на 4 персоны': 'Ложа №4 на 4 персоны',
            'Ложа №3 на 4 персоны': 'Ложа №3 на 4 персоны',
            'Ложа №2 на 4 персоны': 'Ложа №2 на 4 персоны',
            'Ложа №1 на 4 персоны': 'Ложа №1 на 4 персоны',
        }

        cska_arena_common_reformat_dict = {
            'Ложа 401': 'Ложа 401',
            'Ложа 402': 'Ложа 402',
            'Ложа 403': 'Ложа 403',
            'Ложа 404': 'Ложа 404',
            'Ложа 405': 'Ложа 405',
            'Ложа 406': 'Ложа 406',
            'Ложа 407': 'Ложа 407',
            'Ложа 408': 'Ложа 408',
            'Ложа 409': 'Ложа 409',
            'Ложа 410': 'Ложа 410',
            'Ложа 411': 'Ложа 411',
            'Ложа 412': 'Ложа 412',
            'Ложа 413': 'Ложа 413',
            'Ложа 414': 'Ложа 414',
            'Ложа 415': 'Ложа 415',
            'Ложа 416': 'Ложа 416',
            'Ложа 417': 'Ложа 417',
            'Ложа 418': 'Ложа 418',
            'Ложа 419': 'Ложа 419',
            'Ложа 420': 'Ложа 420',
            'Ложа 421': 'Ложа 421',
            'Ложа 422': 'Ложа 422',
            'Ложа 423': 'Ложа 423',
            'Ложа 424': 'Ложа 424',
            'Ложа 425': 'Ложа 425',
            'Ложа 426': 'Ложа 426',
            'Ложа 427': 'Ложа 427',
            'Ложа 428': 'Ложа 428',
            'Ложа 429': 'Ложа 429',
            'Ложа 430': 'Ложа 430',
            'Ложа 431': 'Ложа 431',
            'Ложа 432': 'Ложа 432',
            'Ложа 433': 'Ложа 433',
            'Ложа 434': 'Ложа 434',
            'Ложа 435': 'Ложа 435',
            'Ложа 436': 'Ложа 436',
            'Ложа 301': 'Ложа 301',
            'Ложа 302': 'Ложа 302',
            'Ложа 303': 'Ложа 303',
            'Ложа 304': 'Ложа 304',
            'Ложа 305': 'Ложа 305',
            'Ложа 306': 'Ложа 306',
            'Ложа 307': 'Ложа 307',
            'Ложа 308': 'Ложа 308',
            'Ложа 309': 'Ложа 309',
            'Ложа 310': 'Ложа 310',
            'Ложа 311': 'Ложа 311',
            'Ложа 312': 'Ложа 312',
            'Ложа 313': 'Ложа 313',
            'Ложа 314': 'Ложа 314',
            'Ложа 315': 'Ложа 315',
            'Ложа 316': 'Ложа 316',
            'Ложа 317': 'Ложа 317',
            'Ложа 318': 'Ложа 318',
            'Ложа 319': 'Ложа 319',
            'Ложа 321': 'Ложа 321',
            'Ложа 322': 'Ложа 322',
            'Ложа 323': 'Ложа 323',
            'Ложа 324': 'Ложа 324',
            'Ложа 325': 'Ложа 325',
            'Ложа 326': 'Ложа 326',
            'Ложа 327': 'Ложа 327',
            'Ложа 328': 'Ложа 328',
            'Ложа 329': 'Ложа 329',
            'Ложа 330': 'Ложа 330',
            'Ложа 331': 'Ложа 331',
            'Ложа 332': 'Ложа 332',
            'Ложа 333': 'Ложа 333',
            'Ложа 334': 'Ложа 334',
            'Ложа 335': 'Ложа 335',
            'Ложа 336': 'Ложа 336',
            'Ложа 337': 'Ложа 337',
            'Ложа 338': 'Ложа 338',
            'Ложа 339': 'Ложа 339',
            'Ложа 340': 'Ложа 340',
            'Ложа 341': 'Ложа 341',
            'Сектор 511': 'Сектор 511',
            'Сектор 507': 'Сектор 507',
            'Сектор 504': 'Сектор 504',
            'Сектор 514': 'Сектор 514',
            'Сектор 510': 'Сектор 510',
            'Сектор 509': 'Сектор 509',
            'Сектор 508': 'Сектор 508',
            'Сектор 513': 'Сектор 513',
            'Сектор 512': 'Сектор 512',
            'Сектор 214': 'Сектор 214',
            'Сектор 213': 'Сектор 213',
            'Сектор 212': 'Сектор 212',
            'Сектор 211': 'Сектор 211',
            'Сектор 210': 'Сектор 210',
            'Сектор 209': 'Сектор 209',
            'Сектор 208': 'Сектор 208',
            'Сектор 506': 'Сектор 506',
            'Сектор 505': 'Сектор 505',
            'Сектор 207': 'Сектор 207',
            'Сектор 206': 'Сектор 206',
            'Сектор 205': 'Сектор 205',
            'Сектор 204': 'Сектор 204',
            'Сектор 203': 'Сектор 203',
            'Сектор 202': 'Сектор 202',
            'Сектор 201': 'Сектор 201',
            'Сектор 503': 'Сектор 503',
            'Сектор 502': 'Сектор 502',
            'Сектор 501': 'Сектор 501',
            'Танцпол': 'Танцпол',
            '401': 'Ложа 401',
            '402': 'Ложа 402',
            '403': 'Ложа 403',
            '404': 'Ложа 404',
            '405': 'Ложа 405',
            '406': 'Ложа 406',
            '407': 'Ложа 407',
            '408': 'Ложа 408',
            '409': 'Ложа 409',
            '410': 'Ложа 410',
            '411': 'Ложа 411',
            '412': 'Ложа 412',
            '413': 'Ложа 413',
            '414': 'Ложа 414',
            '415': 'Ложа 415',
            '416': 'Ложа 416',
            '417': 'Ложа 417',
            '418': 'Ложа 418',
            '419': 'Ложа 419',
            '420': 'Ложа 420',
            '421': 'Ложа 421',
            '422': 'Ложа 422',
            '423': 'Ложа 423',
            '424': 'Ложа 424',
            '425': 'Ложа 425',
            '426': 'Ложа 426',
            '427': 'Ложа 427',
            '428': 'Ложа 428',
            '429': 'Ложа 429',
            '430': 'Ложа 430',
            '431': 'Ложа 431',
            '432': 'Ложа 432',
            '433': 'Ложа 433',
            '434': 'Ложа 434',
            '435': 'Ложа 435',
            '436': 'Ложа 436',
            '301': 'Ложа 301',
            '302': 'Ложа 302',
            '303': 'Ложа 303',
            '304': 'Ложа 304',
            '305': 'Ложа 305',
            '306': 'Ложа 306',
            '307': 'Ложа 307',
            '308': 'Ложа 308',
            '309': 'Ложа 309',
            '310': 'Ложа 310',
            '311': 'Ложа 311',
            '312': 'Ложа 312',
            '313': 'Ложа 313',
            '314': 'Ложа 314',
            '315': 'Ложа 315',
            '316': 'Ложа 316',
            '317': 'Ложа 317',
            '318': 'Ложа 318',
            '319': 'Ложа 319',
            '321': 'Ложа 321',
            '322': 'Ложа 322',
            '323': 'Ложа 323',
            '324': 'Ложа 324',
            '325': 'Ложа 325',
            '326': 'Ложа 326',
            '327': 'Ложа 327',
            '328': 'Ложа 328',
            '329': 'Ложа 329',
            '330': 'Ложа 330',
            '331': 'Ложа 331',
            '332': 'Ложа 332',
            '333': 'Ложа 333',
            '334': 'Ложа 334',
            '335': 'Ложа 335',
            '336': 'Ложа 336',
            '337': 'Ложа 337',
            '338': 'Ложа 338',
            '339': 'Ложа 339',
            '340': 'Ложа 340',
            '341': 'Ложа 341',
            '511': 'Сектор 511',
            '507': 'Сектор 507',
            '504': 'Сектор 504',
            '514': 'Сектор 514',
            '510': 'Сектор 510',
            '509': 'Сектор 509',
            '508': 'Сектор 508',
            '513': 'Сектор 513',
            '512': 'Сектор 512',
            '214': 'Сектор 214',
            '213': 'Сектор 213',
            '212': 'Сектор 212',
            '211': 'Сектор 211',
            '210': 'Сектор 210',
            '209': 'Сектор 209',
            '208': 'Сектор 208',
            '506': 'Сектор 506',
            '505': 'Сектор 505',
            '207': 'Сектор 207',
            '206': 'Сектор 206',
            '205': 'Сектор 205',
            '204': 'Сектор 204',
            '203': 'Сектор 203',
            '202': 'Сектор 202',
            '201': 'Сектор 201',
            '503': 'Сектор 503',
            '502': 'Сектор 502',
            '501': 'Сектор 501',
            'Партер C': 'Партер C',
            'Партер B': 'Партер B',
            'Партер A': 'Партер A',
            'Рингсайд A': 'Рингсайд A',
            'Рингсайд B': 'Рингсайд B',
            'Рингсайд C': 'Рингсайд C',
            'Рингсайд D': 'Рингсайд D',
            'Рингсайд E': 'Рингсайд E',
            '5 уровень Сектор 511': 'Сектор 511',
            '5 уровень Сектор 507': 'Сектор 507',
            '5 уровень Сектор 504': 'Сектор 504',
            '5 уровень Сектор 514': 'Сектор 514',
            '5 уровень Сектор 510': 'Сектор 510',
            '5 уровень Сектор 509': 'Сектор 509',
            '5 уровень Сектор 508': 'Сектор 508',
            '5 уровень Сектор 513': 'Сектор 513',
            '5 уровень Сектор 512': 'Сектор 512',
            '2 уровень Сектор 214': 'Сектор 214',
            '2 уровень Сектор 213': 'Сектор 213',
            '2 уровень Сектор 212': 'Сектор 212',
            '2 уровень Сектор 211': 'Сектор 211',
            '2 уровень Сектор 210': 'Сектор 210',
            '2 уровень Сектор 209': 'Сектор 209',
            '2 уровень Сектор 208': 'Сектор 208',
            '5 уровень Сектор 506': 'Сектор 506',
            '5 уровень Сектор 505': 'Сектор 505',
            '2 уровень Сектор 207': 'Сектор 207',
            '2 уровень Сектор 206': 'Сектор 206',
            '2 уровень Сектор 205': 'Сектор 205',
            '2 уровень Сектор 204': 'Сектор 204',
            '2 уровень Сектор 203': 'Сектор 203',
            '2 уровень Сектор 202': 'Сектор 202',
            '2 уровень Сектор 201': 'Сектор 201',
            '5 уровень Сектор 503': 'Сектор 503',
            '5 уровень Сектор 502': 'Сектор 502',
            '5 уровень Сектор 501': 'Сектор 501',
        }

        vahtangova_main_reformat_dict = {
            'Партер откидное Г': 'Партер откидные Г',
            'Партер откидное В': 'Партер откидные В',
            'Партер откидное Б': 'Партер откидные Б',
            'Партер откидное А': 'Партер откидные А',
            'Партер': 'Партер',
            'Бенуар прав.ст. Ложа N1': 'Ложа бенуара 1 правая сторона',
            'Бенуар прав.ст. Ложа N2': 'Ложа бенуара 2 правая сторона',
            'Бенуар прав.ст. Ложа N3': 'Ложа бенуара 3 правая сторона',
            'Бенуар левая ст. Ложа N1': 'Ложа бенуара 1 левая сторона',
            'Бенуар левая ст. Ложа N2': 'Ложа бенуара 2 левая сторона',
            'Бенуар левая ст. Ложа N3': 'Ложа бенуара 3 левая сторона',
            'Амфитеатр откидное': 'Амфитеатр откидное',
            'Амфитеатр': 'Амфитеатр',
            'Бельэтаж прав.ст. Ложа N2': 'Ложа бельэтажа 2 правая сторона',
            'Бельэтаж прав.ст. Ложа N3': 'Ложа бельэтажа 3 правая сторона',
            'Бельэтаж прав.ст. Ложа N4': 'Ложа бельэтажа 4 правая сторона',
            'Бельэтаж лев.ст. Ложа №2': 'Ложа бельэтажа 2 левая сторона',
            'Бельэтаж лев.ст. Ложа №3': 'Ложа бельэтажа 3 левая сторона',
            'Бельэтаж лев.ст. Ложа №4': 'Ложа бельэтажа 4 левая сторона',
            'Бельэтаж откидное': 'Бельэтаж откидное',
            'Бельэтаж': 'Бельэтаж',
            'Балкон правая ст. Ложа №2': 'Ложа балкона 2 правая сторона',
            'Балкон правая ст. Ложа №3': 'Ложа балкона 3 правая сторона',
            'Балкон правая ст. Ложа №4': 'Ложа балкона 4 правая сторона',
            'Балкон левая ст. Ложа №2': 'Ложа балкона 2 левая сторона',
            'Балкон левая ст. Ложа №3': 'Ложа балкона 3 левая сторона',
            'Балкон левая ст. Ложа N4': 'Ложа балкона 4 левая сторона',
            'Балкон откидное': 'Балкон откидное',
            'Балкон': 'Балкон',
        }

        mht_main_reformat_dict = {
            'Партер откидное А': 'Партер, откидные А',
            'Партер откидное Б': 'Партер, откидные Б',
            'Партер': 'Партер',
            '': 'Бенуар, ложа левая',
            'Ложа бенуар правая': 'Бенуар, ложа правая',
            '': 'Амфитеатр, откидное Б',
            'Амфитеатр': 'Амфитеатр',
            '': 'Бельэтаж, место 1А',
            '': 'Бельэтаж, место 2А',
            'Бельэтаж середина': 'Бельэтаж, середина',
            'Бельэтаж середина ограниченный обзор.': 'Бельэтаж, середина',
            'Бельэтаж откидное А': 'Бельэтаж, правая сторона (откидное А)',
            'Бельэтаж правая откидное огран.обзор': 'Бельэтаж, правая сторона (откидное А)',
            'Бельэтаж правая сторона': 'Бельэтаж, правая сторона',
            'Бельэтаж правая ограниченный обзор': 'Бельэтаж, правая сторона',
            '': 'Бельэтаж, левая сторона (откидное Б)',
            '': 'Бельэтаж, левая сторона',
            '': 'Бельэтаж, ложа левая',
            'Бельэтаж ложа правая': 'Бельэтаж, ложа правая',
            'Балкон правая сторона': 'Балкон, правая сторона',
            'бАЛКОН ПРАВАЯ НЕУДОБНОЕ': 'Балкон, правая сторона',
            'Балкон правая ограниченный обзор': 'Балкон, правая сторона',
            'Балкон середина': 'Балкон, середина',
            'Балкон середина ограниченный обзор': 'Балкон, середина',
            'Балкон левая сторона': 'Балкон, левая сторона',
            'Ложа бенуар левая': 'Бенуар, ложа левая',
            'Бельэтаж ложа левая': 'Бельэтаж, ложа левая',
            'Бельэтаж левая сторона': 'Бельэтаж, левая сторона',
            'Бенуар правая сторона': 'Бенуар, ложа правая',
        }

        mht_new_reformat_dict = {
            'Партер': 'Партер',
            'Партер частично ограниченный просмотр': 'Партер',
            'ГАЛЕРЕЯ': 'Галерея',
        }

        satire_main_reformat_dict = {
            'Партер правая сторона': 'Партер',
            'Партер левая сторона': 'Партер',
            'Амфитеатр правая сторона': 'Амфитеатр',
            'Амфитеатр левая сторона': 'Амфитеатр',
            'Правая Ложа': 'Ложа',
            'Левая ложа': 'Ложа',
        }

        operetta_main_reformat_dict = {
            'Партер': 'Партер',
            'Ложа бенуара №1': 'Ложа бенуара №1',
            'Ложа бенуара №2': 'Ложа бенуара №2',
            'Ложа бенуара №3': 'Ложа бенуара №3',
            'Ложа бенуара №4': 'Ложа бенуара №4',
            'Ложа бенуара №5': 'Ложа бенуара №5',
            'Ложа бенуара №6': 'Ложа бенуара №6',
            'Ложа бенуара №7': 'Ложа бенуара №7',
            'Ложа бенуара №8': 'Ложа бенуара №8',
            'Амфитеатр': 'Амфитеатр',
            'Балкон': 'Балкон',
            'Бельэтаж': 'Бельэтаж',
            'Ложа бельэтажа №1': 'Ложа бельэтажа №1',
            'Ложа бельэтажа №2': 'Ложа бельэтажа №2',
        }

        luzhniki_tanc_fan_2 = {
            'Ложа 102 (целиком)': 'Ложа 102 (целиком)',
            'Ложа 101 (целиком)': 'Ложа 101 (целиком)',
            'Ложа 48N (целиком)': 'Ложа 48N (целиком)',
            'Ложа 48M (целиком)': 'Ложа 48M (целиком)',
            'Ложа 48L (целиком)': 'Ложа 48L (целиком)',
            'Ложа 48K (целиком)': 'Ложа 48K (целиком)',
            'Ложа 48J (целиком)': 'Ложа 48J (целиком)',
            'Ложа 48I (целиком)': 'Ложа 48I (целиком)',
            'Ложа 48H (целиком)': 'Ложа 48H (целиком)',
            'Ложа 48G (целиком)': 'Ложа 48G (целиком)',
            'Ложа 48F (целиком)': 'Ложа 48F (целиком)',
            'Ложа 48E (целиком)': 'Ложа 48E (целиком)',
            'Ложа 48D (целиком)': 'Ложа 48D (целиком)',
            'Ложа 48C (целиком)': 'Ложа 48C (целиком)',
            'Ложа 48B (целиком)': 'Ложа 48B (целиком)',
            'Ложа 48A (целиком)': 'Ложа 48A (целиком)',
            'Ложа 48 (целиком)': 'Ложа 48 (целиком)',
            'Ложа 47 (целиком)': 'Ложа 47 (целиком)',
            'Ложа 46 (целиком)': 'Ложа 46 (целиком)',
            'Ложа 45 (целиком)': 'Ложа 45 (целиком)',
            'Ложа 44 (целиком)': 'Ложа 44 (целиком)',
            'Ложа 43 (целиком)': 'Ложа 43 (целиком)',
            'Ложа 42 (целиком)': 'Ложа 42 (целиком)',
            'Ложа 41 (целиком)': 'Ложа 41 (целиком)',
            'Ложа 40 (целиком)': 'Ложа 40 (целиком)',
            'Ложа 39 (целиком)': 'Ложа 39 (целиком)',
            'Ложа 38 (целиком)': 'Ложа 38 (целиком)',
            'Ложа 37 (целиком)': 'Ложа 37 (целиком)',
            'Ложа 36 (целиком)': 'Ложа 36 (целиком)',
            'Ложа 35 (целиком)': 'Ложа 35 (целиком)',
            'Ложа 34 (целиком)': 'Ложа 34 (целиком)',
            'Ложа 33 (целиком)': 'Ложа 33 (целиком)',
            'Ложа 32 (целиком)': 'Ложа 32 (целиком)',
            'Ложа 31 (целиком)': 'Ложа 31 (целиком)',
            'Ложа 30 (целиком)': 'Ложа 30 (целиком)',
            'Ложа 29 (целиком)': 'Ложа 29 (целиком)',
            'Ложа 28 (целиком)': 'Ложа 28 (целиком)',
            'Ложа 27 (целиком)': 'Ложа 27 (целиком)',
            'Ложа 26 (целиком)': 'Ложа 26 (целиком)',
            'Ложа 25 (целиком)': 'Ложа 25 (целиком)',
            'Ложа 24 (целиком)': 'Ложа 24 (целиком)',
            'Ложа 23 (целиком)': 'Ложа 23 (целиком)',
            'Ложа 22 (целиком)': 'Ложа 22 (целиком)',
            'Ложа 21 (целиком)': 'Ложа 21 (целиком)',
            'Ложа 20 (целиком)': 'Ложа 20 (целиком)',
            'Ложа 19 (целиком)': 'Ложа 19 (целиком)',
            'Ложа 18 (целиком)': 'Ложа 18 (целиком)',
            'Ложа 17 (целиком)': 'Ложа 17 (целиком)',
            'Ложа 16 (целиком)': 'Ложа 16 (целиком)',
            'Ложа 15 (целиком)': 'Ложа 15 (целиком)',
            'Ложа 14 (целиком)': 'Ложа 14 (целиком)',
            'Ложа 13 (целиком)': 'Ложа 13 (целиком)',
            'Ложа 12 (целиком)': 'Ложа 12 (целиком)',
            'Ложа 11 (целиком)': 'Ложа 11 (целиком)',
            'Ложа 10 (целиком)': 'Ложа 10 (целиком)',
            'Ложа 9 (целиком)': 'Ложа 9 (целиком)',
            'Ложа 8 (целиком)': 'Ложа 8 (целиком)',
            'Ложа 7 (целиком)': 'Ложа 7 (целиком)',
            'Ложа 6 (целиком)': 'Ложа 6 (целиком)',
            'Ложа 5 (целиком)': 'Ложа 5 (целиком)',
            'Ложа 4 (целиком)': 'Ложа 4 (целиком)',
            'Ложа 3 (целиком)': 'Ложа 3 (целиком)',
            'Ложа 48J': 'Ложа 48J',
            'Ложа 48N': 'Ложа 48N',
            'Ложа 48M': 'Ложа 48M',
            'Ложа 48L': 'Ложа 48L',
            'Ложа 48K': 'Ложа 48K',
            'Ложа 48I': 'Ложа 48I',
            'Ложа 48H': 'Ложа 48H',
            'Ложа 48G': 'Ложа 48G',
            'Ложа 48F': 'Ложа 48F',
            'Ложа 48E': 'Ложа 48E',
            'Ложа 48D': 'Ложа 48D',
            'Ложа 48C': 'Ложа 48C',
            'Ложа 48B': 'Ложа 48B',
            'Ложа 48A': 'Ложа 48A',
            'Ложа 48': 'Ложа 48',
            'Ложа 47': 'Ложа 47',
            'Ложа 46': 'Ложа 46',
            'Ложа 45': 'Ложа 45',
            'Ложа 44': 'Ложа 44',
            'Ложа 43': 'Ложа 43',
            'Ложа 42': 'Ложа 42',
            'Ложа 41': 'Ложа 41',
            'Ложа 40': 'Ложа 40',
            'Ложа 39': 'Ложа 39',
            'Ложа 38': 'Ложа 38',
            'Ложа 37': 'Ложа 37',
            'Ложа 36': 'Ложа 36',
            'Ложа 35': 'Ложа 35',
            'Ложа 34': 'Ложа 34',
            'Ложа 33': 'Ложа 33',
            'Ложа 32': 'Ложа 32',
            'Ложа 31': 'Ложа 31',
            'Ложа 30': 'Ложа 30',
            'Ложа 29': 'Ложа 29',
            'Ложа 28': 'Ложа 28',
            'Ложа 27': 'Ложа 27',
            'Ложа 26': 'Ложа 26',
            'Ложа 25': 'Ложа 25',
            'Ложа 24': 'Ложа 24',
            'Ложа 23': 'Ложа 23',
            'Ложа 22': 'Ложа 22',
            'Ложа 21': 'Ложа 21',
            'Ложа 20': 'Ложа 20',
            'Ложа 19': 'Ложа 19',
            'Ложа 18': 'Ложа 18',
            'Ложа 17': 'Ложа 17',
            'Ложа 16': 'Ложа 16',
            'Ложа 15': 'Ложа 15',
            'Ложа 14': 'Ложа 14',
            'Ложа 13': 'Ложа 13',
            'Ложа 12': 'Ложа 12',
            'Ложа 11': 'Ложа 11',
            'Ложа 10': 'Ложа 10',
            'Ложа 9': 'Ложа 9',
            'Ложа 8': 'Ложа 8',
            'Ложа 7': 'Ложа 7',
            'Ложа 6': 'Ложа 6',
            'Ложа 5': 'Ложа 5',
            'Ложа 4': 'Ложа 4',
            'Ложа 3': 'Ложа 3',
            'Ложа 102': 'Ложа 102',
            'Ложа 101': 'Ложа 101',
            'С248': 'Сектор C248',
            'С247': 'Сектор C247',
            'С246': 'Сектор C246',
            'С245': 'Сектор C245',
            'С244': 'Сектор C244',
            'С243': 'Сектор C243',
            'С242': 'Сектор C242',
            'С241': 'Сектор C241',
            'С240': 'Сектор C240',
            'С239': 'Сектор C239',
            'С238': 'Сектор C238',
            'С237': 'Сектор C237',
            'С236': 'Сектор C236',
            'С235': 'Сектор C235',
            'С234': 'Сектор C234',
            'С233': 'Сектор C233',
            'D232': 'Сектор D232',
            'D231': 'Сектор D231',
            'D230': 'Сектор D230',
            'D229': 'Сектор D229',
            'D228': 'Сектор D228',
            'D227': 'Сектор D227',
            'D226': 'Сектор D226',
            'D225': 'Сектор D225',
            'D224': 'Сектор D224',
            'D223': 'Сектор D223',
            'D222': 'Сектор D222',
            'D221': 'Сектор D221',
            'D220': 'Сектор D220',
            'D219': 'Сектор D219',
            'D218': 'Сектор D218',
            'D217': 'Сектор D217',
            'А216': 'Сектор A216',
            'A216': 'Сектор A216',
            'А215': 'Сектор A215',
            'A215': 'Сектор A215',
            'А214': 'Сектор A214',
            'A214': 'Сектор A214',
            'А213': 'Сектор A213',
            'A213': 'Сектор A213',
            'А212': 'Сектор A212',
            'A212': 'Сектор A212',
            'А211': 'Сектор A211',
            'А210': 'Сектор A210',
            'А209': 'Сектор A209',
            'А208': 'Сектор A208',
            'А207': 'Сектор A207',
            'А206': 'Сектор A206',
            'А205': 'Сектор A205',
            'С141': 'Сектор C141',
            'С140': 'Сектор C140',
            'С139': 'Сектор C139',
            'С138': 'Сектор C138',
            'С137': 'Сектор C137',
            'С136': 'Сектор C136',
            'С135': 'Сектор C135',
            'С134': 'Сектор C134',
            'С133': 'Сектор C133',
            'С132': 'Сектор C132',
            'С132 ': 'Сектор C132',
            'С131': 'Сектор C131',
            'С131 ': 'Сектор C131',
            'С130': 'Сектор C130',
            'С129': 'Сектор C129',
            'D128': 'Сектор D128',
            'D127': 'Сектор D127',
            'D126': 'Сектор D126',
            'D125': 'Сектор D125',
            'D124': 'Сектор D124',
            'D123': 'Сектор D123',
            'D122': 'Сектор D122',
            'D121': 'Сектор D121',
            'D120': 'Сектор D120',
            'D119': 'Сектор D119',
            'D118': 'Сектор D118',
            'D117': 'Сектор D117',
            'А116': 'Сектор A116',
            'А115': 'Сектор A115',
            'А114': 'Сектор A114',
            'А113': 'Сектор A113',
            'А112': 'Сектор A112',
            'А111': 'Сектор A111',
            'А110': 'Сектор A110',
            'А109': 'Сектор A109',
            'А108': 'Сектор A108',
            'А107': 'Сектор A107',
            'А106': 'Сектор A106',
            'А105': 'Сектор A105',
            'А104': 'Сектор A104',
            'Танцпол': 'Танцпол',
            'Фан-зона': 'Фан-зона',
        }

        scheme_id_to_dict = {
            # '5c': megasport_tancpol_fanzone_reformat_dict,
            # 'dd': megasport_tancpol_fanzone_reformat_dict,
            # 'c4': megasport_tancpol_fanzone_reformat_dict,
            # 'c5': megasport_tancpol_fanzone_reformat_dict,
            # '64': megasport_only_tancpol_reformat_dict,
            # '36': megasport_hokkey_full_reformat_dict,
            # 'd8': megasport_hokkey_full_reformat_dict,
            # 'da': megasport_basketball_full_reformat_dict,
            # '90': megasport_ice_full_reformat_dict,
            'b0': {},  # Для футбольной схемы, такой схемы у нас пока нет
        }

        teatr_sovremennik_main_scheme = {
            'Ложа бельэтажа правая': 'Правая ложа бельэтажа',
            'Ложа бельэтажа левая': 'Левая ложа бельэтажа',
        }
        
        teatr_sovremennik_another_scheme = {
            'Партер C': 'Сектор C',
            'Партер B': 'Сектор B',
            'Партер A': 'Сектор A'
        }

        ref_dict = {}
        if 'Мегаспорт' in self.venue:
            ref_dict = scheme_id_to_dict.get(self.scheme_identifier, {})
        elif 'Лужники' in self.venue:
            ref_dict = luzhniki_tanc_fan_2
        elif 'VK Stadium' in self.venue:
            ref_dict = vk_stadium_common_reformat_dict
        elif 'ЦСКА Арена' in self.venue:
            ref_dict = cska_arena_common_reformat_dict
        elif 'Вахтангова' in self.venue:
            if 'основная' in self.place_name:
                ref_dict = vahtangova_main_reformat_dict
        elif 'МХТ имени А.П.Чехова' or 'Театр Чехова' in self.venue:
            if 'новая' in self.place_name:
                ref_dict = mht_new_reformat_dict
            else:
                ref_dict = mht_main_reformat_dict
        elif 'Театр Сатиры' in self.venue:
            if 'основная' in self.place_name:
                ref_dict = satire_main_reformat_dict
        elif 'оперетт' in self.venue:
            ref_dict = operetta_main_reformat_dict
        if 'Театр Сатиры' in self.venue or 'театр сатиры' in place_name:
            if 'основная' in self.place_name:
                ref_dict = satire_main_reformat_dict
        elif 'современник' in place_name:
            if 'основная' in place_name:
                ref_dict = teatr_sovremennik_main_scheme
            elif 'другая' in place_name:
                ref_dict = teatr_sovremennik_another_scheme

        reformatted_sector_tickets = {}
        for i, sector in enumerate(a_sectors):
            sector['name'] = ref_dict.get(sector['name'], sector['name'])

            if ref_dict == mht_main_reformat_dict:
                if 'откидное' in sector['name'] or 'откидные' in sector['name']:
                    tickets_f = {}
                    for row, seat in sector['tickets']:
                        seat_f = '1' if seat == '-' else seat
                        tickets_f[row, seat_f] = sector['tickets'][row, seat]
                    reformatted_sector_tickets[i] = tickets_f

            if 'Ледовый Дворец' in self.venue:
                if sector['name'][0] == '3':
                    sector['name'] = 'Ложа ' + sector['name']
                elif 'партер' in sector['name'].lower():
                    continue
                elif 'Сектор' not in sector['name']:
                    sector['name'] = 'Сектор ' + sector['name']
                elif '(' in sector['name'] and ')' in sector['name']:
                    if 'Сектор' in sector['name']:
                        index_start = sector['name'].index('Сектор')
                        index_end = sector['name'].index(')')
                        sector['name'] = sector['name'][index_start:index_end]
            elif 'Юбилейный' in self.venue:
                if 'Трибуна' in sector['name']:
                    sector['name'] = sector['name'].replace('  ', ' ')
                    split_sector_name = sector['name'].split()
                    split_sector_name[1] = split_sector_name[1].replace('Т', '')
                    sector['name'] = ' '.join(split_sector_name)
            elif 'ВТБ Арена' in self.venue:
                if len(sector['name']) == 4:
                    sector['name'] = 'Сектор ' + sector['name']
            elif 'лужники' in self.scheme.name.lower() and 'футбол' in self.scheme.name.lower():
                if 'Сектор' in sector['name']:
                    split_sector_name = sector['name'].split()
                    split_sector_name[1] = split_sector_name[1][0] + ' ' + split_sector_name[1][1:]
                    sector['name'] = ' '.join(split_sector_name)
                if 'Вход' in sector['name']:
                    if 'Ложа' not in sector['name']:
                        sector_name = sector['name'][:sector['name'].index(' Вход')]
                        sector_name = sector_name.replace('С', 'C').replace('А', 'A')
                        sector_name = sector_name.replace('В', 'B').replace('VIP ', '')
                        sector['name'] = 'Сектор ' + sector_name[0] + ' ' + sector_name[1:]
                    else:
                        sector_name = sector['name'][:sector['name'].index(' Вход')]
                        sector['name'] = sector_name.replace('№', '')
            elif 'Лужники' in self.venue:
                if 'ЛОЖА' in sector['name'] and '(' in sector['name']:
                    sector['name'] = 'Ложа ' + sector['name'].split()[1] + ' (целиком)'
                elif 'ЛОЖА' in sector['name']:
                    sector['name'] = 'Ложа ' + sector['name'].split()[1]
                elif len(sector['name']) == 4:
                    sector['name'] = 'Сектор ' + sector['name']
                elif len(sector['name'].split()[0]) == 4 and '(VIP)' in sector['name']:
                    sector['name'] = 'Сектор ' + sector['name'].split()[0]

        for sector_ind, tickets_f in reformatted_sector_tickets.items():
            a_sectors[sector_ind]['tickets'] = tickets_f

    @staticmethod
    def reformat_ufa(a_sectrors):
        res_sectors = {}
        for sector, tickets in a_sectrors.items():
            if 'уровень' in sector:
                name = re.search(r'Сектор \d+', sector)[0]
                sector = name
            res_sectors.setdefault(sector, {}).update(tickets)
        return res_sectors

    @staticmethod
    def reformat_mossovet(a_sectrors):
        res_sectors = {}
        for sector, tickets in a_sectrors.items():
            if 'Балкон, ложа' in sector:
                number = sector.split()[-1]
                number = re.search(r'\d+', number)[0]
                sector = f'Балкон. Ложа №{number}'
            
            elif 'Балкон, боковое левое' in sector:
                sector = f'Балкон. Боковое левое (места с ограниченной видимостью)'
            
            elif 'Балкон, боковое правое' in sector:
                sector = f'Балкон. Боковое правое (места с ограниченной видимостью)'

            elif 'Балкон, литер' in sector:
                letter = sector.split()[-1]
                sector = f'Балкон. Литер {letter}'

            elif 'Бельэтаж литер' in sector or 'Бельэтаж, литер' in sector:
                letter = sector.split()[-1]
                sector = f'Бельэтаж. Литер {letter}'

            elif 'Балкон, литер' in sector:
                letter = sector.split()[-1]
                sector = f'Балкон. Литер {letter}'

            elif 'Ложа амфитеатра' in sector:
                number = sector.split()[-1]
                sector = f'Амфитеатр. Ложа №{number}'
            
            elif 'Ложа бельэтажа' in sector:
                number = sector.split()[-1]
                sector = f'Бельэтаж. Ложа №{number}'

            elif 'Амфитеатр, литер' in sector:
                letter = sector.split()[-1]
                sector = f'Амфитеатр. Литер {letter}'

            res_sectors.setdefault(sector, {}).update(tickets)
        return res_sectors

    @staticmethod
    def reformat_zimnii_sochi(a_sectors):
        new_a_sector = {}
        for sector, tickets in a_sectors.items():
            if re.search(r'бенуар', sector, re.IGNORECASE):
                reformat_row = re.search(r'\d+', sector)
                if reformat_row:
                    new_row = reformat_row.group(0)
                    new_tickets = {(new_row,row_place[1]):price for row_place, price in tickets.items()}
                    new_a_sector.setdefault('Бенуар', {}).update(new_tickets)
            elif re.search(r'бельэтаж', sector, re.IGNORECASE):
                reformat_row = re.search(r'\d+', sector)
                if reformat_row:
                    new_row = reformat_row.group(0)
                    new_tickets = {(new_row,row_place[1]):price for row_place, price in tickets.items()}
                    new_a_sector.setdefault('Бельэтаж', {}).update(new_tickets)
            else:
                new_a_sector.setdefault(sector, {}).update(tickets)
        return new_a_sector
    
    @staticmethod
    def reformat_g_drive(a_sectrors):
        res_sectors = {}
        for sector, tickets in a_sectrors.items():
            if re.search(r'^\d+$', sector): #103
                sector = f'Сектор {sector}'
            res_sectors.setdefault(sector, {}).update(tickets)
        return res_sectors

    def new_reformat(self, a_sectors, venue):
        reformat_box = {
            'Кремлёвский дворец': {
                'Сектор VIP - A': 'VIP A',
                'Сектор VIP - B': 'VIP B',
                'Сектор VIP - C': 'VIP C',
                'Амфитеатр-середина': 'Амфитеатр, середина',
                'Амфитеатр середина': 'Амфитеатр, середина',
                'Амфитеатр левая сторона': 'Амфитеатр, левая сторона',
                'Амфитеатр правая сторона': 'Амфитеатр, правая сторона',
                'Балкон-середина': 'Балкон, середина',
                'Балкон середина': 'Балкон, середина',
                'Балкон левая сторона': 'Балкон, левая сторона',
                'Балкон правая сторона': 'Балкон, правая сторона',
                'Балкон левая сторона откидные места': 'Балкон, левая сторона (откидные)',
                'Балкон лев.ст. откидное': 'Балкон, левая сторона (откидные)',
                'Балкон прав.ст. откидное': 'Балкон, правая сторона (откидные)',
                'Балкон правая сторона откидные места': 'Балкон, правая сторона (откидные)',
                'Ложа балкона правая сторона': 'Ложа балкона, правая сторона',
                'Ложа балкона правая': 'Ложа балкона, правая сторона',
                'Ложа балкона левая': 'Ложа балкона, левая сторона',
                'Ложа балкона левая сторона': 'Ложа балкона, левая сторона',
                'Партер середина': 'Партер, середина',
                'Партер правая сторона': 'Партер, правая сторона',
                'Партер левая сторона': 'Партер, левая сторона',
                'Малый зал ГКД': 'Партер',
            },
            'Театр «Современник»': {
                'Партер A': 'Сектор A',
                'Партер B': 'Сектор B',
                'Партер C': 'Сектор C',
                'Ложа бельэтажа правая': 'Правая ложа бельэтажа',
                'Ложа бельэтажа левая': 'Левая ложа бельэтажа',
            },
            'Театр Сатиры': {
                'Партер правая сторона': 'Партер',
                'Партер левая сторона': 'Партер',
                'Амфитеатр правая сторона': 'Амфитеатр',
                'Амфитеатр левая сторона': 'Амфитеатр',
                'Правая Ложа': 'Ложа',
                'Правая ложа': 'Ложа',
                'Левая ложа': 'Ложа',
                'Левая Ложа': 'Ложа',
            },
            'Казанский цирк':{
                'Сектор П5, правая сторона': 'Правая сторона. Сектор 5',
                'Сектор П4, правая сторона': 'Правая сторона. Сектор 4',
                'Сектор П3, правая сторона': 'Правая сторона. Сектор 3',
                'Сектор П2, правая сторона': 'Правая сторона. Сектор 2',
                'Сектор П1, правая сторона': 'Правая сторона. Сектор 1',
                'Сектор Л5, левая сторона': 'Левая сторона. Сектор 5',
                'Сектор Л4, левая сторона': 'Левая сторона. Сектор 4',
                'Сектор Л3, левая сторона': 'Левая сторона. Сектор 3',
                'Сектор Л2, левая сторона': 'Левая сторона. Сектор 2',
                'Сектор Л1, левая сторона': 'Левая сторона. Сектор 1',
                'VIP': 'VIP'
            },
            'Театр Маяковского': {
                'Партер левая сторона': 'Партер',
                'Партер правая сторона': 'Партер',
                'Бельэтаж правая сторона': 'Бельэтаж, правая сторона',
                'Бельэтаж середина': 'Бельэтаж, середина',
                'Бельэтаж середина неудобные места':'Бельэтаж, середина',
                'Бельэтаж левая сторона': 'Бельэтаж, левая сторона',
                'Бенуар Ложа №1': 'Ложи бенуара',
                'Бенуар Ложа №2': 'Ложи бенуара',
                'Бенуар Ложа №3': 'Ложи бенуара',
                'Бенуар Ложа №4': 'Ложи бенуара',
                'Бенуар Ложа №5': 'Ложи бенуара',
                'Бенуар Ложа №6': 'Ложи бенуара',
                'Бенуар Ложа №7': 'Ложи бенуара',
                'Бенуар Ложа №8': 'Ложи бенуара',
                'Бенуар Ложа №9': 'Ложи бенуара',
                'Бенуар Ложа №10': 'Ложи бенуара',
                'Бенуар Ложа №11': 'Ложи бенуара',
                'Бенуар Ложа №12': 'Ложи бенуара',
                'Балкон 1 яруса лев. ст.': 'Балкон 1 го яруса, левая сторона',
                'Балкон 1 яруса середина': 'Балкон 1 го яруса, середина',
                'Балкон 1 яруса пр. ст.': 'Балкон 1 го яруса, правая сторона',
                'Балкон 2 яруса пр. ст.': 'Балкон 2 го яруса, правая сторона',
                'Балкон 2 яруса лев. ст.': 'Балкон 2 го яруса, левая сторона',
                'Балкон 2 яруса середина': 'Балкон 2 го яруса, середина',
                'Балкон 2 яруса середина неудобные': 'Балкон 2 го яруса, середина',
                'Балкон 1 яруса лев. ст. неудобные': 'Балкон 1 го яруса, левая сторона',
                'Балкон 1 яруса пр. ст. неудобные': 'Балкон 1 го яруса, правая сторона',
                'Бельэтаж правая сторона неудобные': 'Бельэтаж, правая сторона',
                'Бельэтаж левая сторона неудобные': 'Бельэтаж, левая сторона',
                'Бельэтаж середина неудобные места': 'Бельэтаж, середина',
                'Амфитеатр неудобные места': 'Амфитеатр',
                'Бенуар Ложа №5 неудобные места': 'Ложи бенуара',
                'Бенуар Ложа №6 неудобные места': 'Ложи бенуара',
                'Бенуар Ложа №7 неудобные места': 'Ложи бенуара',
                'Бенуар Ложа №8 неудобные места': 'Ложи бенуара',
                'Партер середина': 'Партер',
            }
        }
        name = reformat_box.get(venue)
        if name:
            a_sectors_new = {}
            for sector, tickets in a_sectors.items():
                if name.get(sector):
                    a_sectors_new.setdefault(name.get(sector), {}).update(tickets)
                else:
                    a_sectors_new.setdefault(sector, {}).update(tickets)

            return a_sectors_new 
        else: 
            return a_sectors

    async def old_get_sectors(self, product_info_json):
        sectors = product_info_json.get('orderKit').get('sectors')
        avalible_sectors = [(i.get('id'),i.get('name')) for i in sectors if not i.get('isDisabled')
                            and i.get("saleMode")!="ALL_SEATS_ONLY"] 
        tarif_groups = product_info_json.get('orderKit').get('tariffGroups')
        tarif_prices = {i.get('id'):i.get('tariffs')[0].get('price') for i in tarif_groups}
        a_sectors = {}
        headers = {
            "Accept": "*/*",
            "Accept-Encoding": "gzip, deflate, br, zstd",
            "Accept-Language": "en-US,en;q=0.9,ru;q=0.8",
            "Dnt": "1",
            "Origin": f"https://{self.domain}",
            "Referer": f"https://{self.domain}/",
            "Sec-Ch-Ua-Mobile": "?0",
            "Sec-Ch-Ua-Platform": f"\"{self.platform}\"",
            "Sec-Fetch-Dest": "empty",
            "Sec-Fetch-Mode": "cors",
            "Sec-Fetch-Site": "same-site",
            "User-Agent": self.user_agent
        }
        for sector in avalible_sectors:
            self.debug(sector[1], 'sector parsing now...')
            await asyncio.sleep(25)
            try:
                url_load_cheme = f'https://api.kassir.ru/api/orders/sectors/scheme/{self.id}/{sector[0]}?domain={self.domain}'
                r = await self.session.get(url=url_load_cheme, headers=headers)
                #self.debug(r.status_code, url_load_cheme,'r.status_code in avalible_sectors')
                while r.status_code != 200 and self.count_error > 0:
                    self.count_error -= 1
                    self.warning(f'Ban proxy! {self.session.bot.proxy.async_proxy} in {url_load_cheme} status code: {r.status_code} err:{self.count_error}')
                    await self.change_proxy()
                    await asyncio.sleep(20)
                    r = await self.session.get(url=url_load_cheme, headers=headers)
                s = BeautifulSoup(r.text, 'lxml-xml')
                polygon = [i for i in s.find_all('polygon') if 'kh:tariff-group-id' in i.attrs]
                for i in polygon:
                    row = i.get('kh:rowNumber')
                    if not row: row = '1'
                    price = int(tarif_prices.get(int(i.get('kh:tariff-group-id'))))
                    place = i.find_next('text').text
                    place_to_write = {(row,str(place)):price}
                    a_sectors.setdefault(sector[1],{}).update(place_to_write)
            except Exception as ex:
                self.warning(f'{sector}: Exception in availible_sectors:{ex}')
                raise
        return a_sectors

    async def load_one_product_id(self):
        headers = {
            "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
            "Accept-Encoding": "gzip, deflate, br, zstd",
            "Accept-Language": "en-US,en;q=0.9,ru;q=0.8",
            "Cache-Control": "no-cache",
            "DNT": "1",
            "Pragma": "no-cache",
            "Sec-CH-UA-Mobile": "?0",
            "Sec-CH-UA-Platform": f"\"{self.platform}\"",
            "Sec-Fetch-Dest": "document",
            "Sec-Fetch-Mode": "navigate",
            "Sec-Fetch-Site": "same-origin",
            "Sec-Fetch-User": "?1",
            "Upgrade-Insecure-Requests": "1",
            "User-Agent": self.user_agent
        }
        r1 = await self.session.get(self.url, headers=headers)
        soup = BeautifulSoup(r1.text, 'lxml')
        divs_with_product_id = soup.find_all('div', attrs={"data-product-id": True})
        if divs_with_product_id:
            PROD_ID = divs_with_product_id[0].get('data-product-id')
            return PROD_ID
        else:
            self.warning(f"{self.url} cannot find data-product-id here!")
            #raise AssertionError(f"{self.url} find data-product-id without success")

    async def load_product_info(self, PROD_ID, url_api=None):
        time_before_starting = randint(10, 20)
        await asyncio.sleep(time_before_starting)
        if not url_api:
            url_api = f'https://api.kassir.ru/api/event-page-kit/{PROD_ID}?domain={self.domain}'
        self.headers_api = {
            "Accept": "*/*",
            "Accept-Encoding": "gzip, deflate, br, zstd",
            "Accept-Language": "en-US,en;q=0.9,ru;q=0.8",
            "Cache-Control": "no-cache",
            "DNT": "1",
            "Origin": f"https://{self.domain}",
            "Pragma": "no-cache",
            "Referer": f"https://{self.domain}/",
            "Sec-CH-UA-Mobile": "?0",
            "Sec-CH-UA-Platform": f"\"{self.platform}\"",
            "Sec-Fetch-Dest": "empty",
            "Sec-Fetch-Mode": "cors",
            "Sec-Fetch-Site": "same-site",
            "User-Agent": self.user_agent
        }
        r2 = await self.session.get(url_api, headers=self.headers_api)
        if r2.status_code != 200 and self.count_error > 0:
            self.count_error -= 1
            self.warning(f'Ban proxy! {self.proxy.args} in {self.url} status code: {r2.status_code} err:{self.count_error}')
            await self.change_proxy(report=True)
            return await self.load_product_info(PROD_ID, url_api=url_api)
        elif r2.status_code == 200 and self.count_error > 0:
            json_r2 = r2.json()
            if not isinstance(json_r2, dict):
                await self.change_proxy(report=False)
                time_to_sleep = randint(30, 40)
                self.warning(f'Have got an empty json with event-data\n'
                            f'{url_api} will sleep {time_to_sleep}',)
                await asyncio.sleep(time_to_sleep)
                self.count_error -= 1
                return await self.load_product_info(PROD_ID, url_api=url_api)
            return json_r2
        else:
            raise AssertionError(f'Stop recursion {self.proxy.args} in {self.url} {url_api} status code: {r2.status_code}')


    @staticmethod
    def make_tarif(product_info_json):
        tarif_groups = product_info_json.get('orderKit').get('tariffGroups')
        tarif_prices = {i.get('id'): i.get('tariffs')[0].get('price') for i in tarif_groups}
        #{8213240: 850.0, 8213241: 2550.0, 8213242: 2800.0, 8213243: 3000.0, ... }
        return tarif_prices

    @staticmethod
    def check_tickets(product_info_json):
        tarif_groups = product_info_json.get('orderKit')#если есть тарифные группы значит есть билеты
        if tarif_groups:
            return True
        return False

    async def load_tikets_page(self, PROD_ID):
        url_tickets = f'https://api.kassir.ru/api/order-kit/{PROD_ID}/scheme?domain={self.domain}'
        r3 = await self.session.get(url_tickets, headers=self.headers_api)
        json_tickets = r3.json()
        return json_tickets

    @staticmethod
    def make_places_id(tickets_json):
        type:str = tickets_json.get('type')
        if type != 'TICKETRAIN-JSON':
            return type
        data = tickets_json.get('data')
        all_sectors_rows_seats = data.get('entities')
        all_place_id = {}
        # 770772795: {'sector_name': 'Трибуна 7',
        #   'row_number': '14',
        #   'row_name': 'Ряд',
        #   'place_name': '16'}
        for sector in all_sectors_rows_seats:
            secotor_id = sector.get("id")
            sector_name = sector.get("name")
            all_rows_in_sector = sector.get("rows")
            if all_rows_in_sector:
                for row in all_rows_in_sector:
                    row_id = row.get("id")
                    row_number = row.get("name")
                    row_name = row.get("rowName")
                    all_place_in_row = row.get("seats")
                    for place in all_place_in_row:
                        place_id = place.get("id")
                        place_name = place.get("name")
                        all_place_id.setdefault(place_id, {}).update({
                            "sector_name": sector_name,
                            'row_number': row_number,
                            "row_name": row_name,
                            'place_name': place_name
                        })
        return all_place_id

    def make_availible_places(self, tickets_json, ALL_PLACE_ID, TARIFS):
        a_sectors = {}
        data = tickets_json.get('data')
        if data:
            dancefloors_limit = data.get('entranceQuota')
            availible_places = data.get('seatQuota')
            if availible_places:
                for place_id, payment_type in availible_places.items():
                    place_info = ALL_PLACE_ID.get(int(place_id))
                    price = TARIFS.get(payment_type)
                    if place_info and price:
                        sector = place_info.get('sector_name')
                        row = place_info.get('row_number')
                        place = place_info.get('place_name')
                        a_sectors.setdefault(sector, {}).update({
                            (row, place): int(price)
                        })
        return a_sectors
    @staticmethod
    def make_venue(product_info_json):
        try:
            new_venue = product_info_json.get("event")
            new_venue = new_venue.get('venueName').strip()
        except Exception:
            new_venue = ''
        return  new_venue

    async def body(self):
        if 'widget.kassir.ru' in self.url:
            self.domain = re.search(r'(?<=domain\=)[\w\.]+(?=&)', self.url)[0].strip()
            PROD_ID = self.url.split('=')[-1].strip()
            KEY = re.search(r'(?<=key\=)[\w\-]+', self.url)[0].strip()
            url_api = f'https://api.kassir.ru/api/event-page-kit/{PROD_ID}?widgetKey={KEY}&domain={self.domain}'
            product_info_json = await self.load_product_info(PROD_ID, url_api)
        else:
            if '#' in self.url:
                PROD_ID = self.url.split('#')[-1]
                self.url = self.url.split('#')[0]
            else:
                #PROD_ID = await self.load_one_product_id() возможно поможет имитировать настоящего юзера
                PROD_ID = self.id
            product_info_json = await self.load_product_info(PROD_ID)
        import json
        # with open('/home/anton/Work/parsing/EXAMPLE33.json', 'w', encoding='utf-8') as file:
        #     json.dump(product_info_json, file, indent=4, ensure_ascii=False)

        self.new_venue = self.make_venue(product_info_json)
        checker_tickets = self.check_tickets(product_info_json)
        if not checker_tickets:
            self.warning(f'{self.url} dont have any tickets')
            return
        TARIFS:dict = self.make_tarif(product_info_json)

        tickets_json = await self.load_tikets_page(PROD_ID)
        ALL_PLACE_ID:dict|str = self.make_places_id(tickets_json)
        if isinstance(ALL_PLACE_ID, dict):
            a_sectors: dict = self.make_availible_places(tickets_json, ALL_PLACE_ID, TARIFS)
        else:
            self.info(f'{self.url} is type {ALL_PLACE_ID} trying to parse svg xmlns(DANGEROUS!)')
            a_sectors = await self.old_get_sectors(product_info_json)

        list_to_reformat = ['Кремлёвский дворец', 'Театр «Современник»',
                            'Театр Сатиры', 'Казанский цирк', 'Театр Маяковского'] #venue will need to reformat

        #print(self.venue, self.new_venue, 'self.venue, self.new_venue')
        if self.venue in list_to_reformat:
            a_sectors = self.new_reformat(a_sectors, self.venue)
        elif self.venue == 'Зимний театр':
            a_sectors = self.reformat_zimnii_sochi(a_sectors)
        elif (('втб арена' in self.venue.lower() 
                and 'динамо' not in self.name.lower() 
                and 'малая арена' in self.new_venue.lower()) 
                                or
                         ('втб арена' in self.venue.lower() 
                          and 'widget' in self.url and 'динамо' not in self.name.lower())):
            #ВТБ Арена – Центральный стадион «Динамо» (Малая арена)
            a_sectors = self.reformat_vtb_arena(a_sectors)
        elif (('втб арена' in self.venue.lower()
               and 'динамо' in self.name.lower() 
               and 'малая арена' in self.new_venue.lower())
                                 or 
                    ('втб арена' in self.venue.lower() 
                     and 'widget' in self.url and 'динамо' in self.name.lower() )):
            #ВТБ Арена – Центральный стадион «Динамо» (Малая арена)
            #  Cектора переименованы под хоккей ['Трибуна Давыдова. Сектор B312', ..]
            a_sectors = self.reformat_vtb_for_dynamo(a_sectors)
        elif 'втб арена' in self.venue.lower()  and 'малая арена' not in self.new_venue.lower():
            #ВТБ Арена – Центральный стадион «Динамо» -> футбольная арена
            a_sectors = self.reformat_vtb_arena_fotball(a_sectors)
        elif self.venue == 'Дворец Спорта «Мегаспорт»':
            a_sectors = self.reformat_megasport(a_sectors)
        elif self.venue == 'G-Drive Арена':
            a_sectors = self.reformat_g_drive(a_sectors)
        elif 'Моссовета' in self.venue:
            a_sectors = self.reformat_mossovet(a_sectors)
        elif 'Уфа' in self.venue:
            a_sectors = self.reformat_ufa(a_sectors)

        for sector, tickets in a_sectors.items():
            #self.info(sector, len(tickets))
            self.register_sector(sector.strip(), tickets)
        #self.check_sectors()
