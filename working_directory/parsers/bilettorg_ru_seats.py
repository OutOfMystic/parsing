import re

from bs4 import BeautifulSoup

from parse_module.coroutines import AsyncSeatsParser
from parse_module.manager.proxy.check import NormalConditions
from parse_module.models.parser import SeatsParser
from parse_module.manager.proxy.sessions import AsyncProxySession, ProxySession
from parse_module.utils.parse_utils import double_split


class Bilettorg(AsyncSeatsParser):
    proxy_check = NormalConditions()
    url_filter = lambda url: 'www.bilettorg.ru' in url

    def __init__(self, *args, **extra):
        super().__init__(*args, **extra)
        self.delay = 1200
        self.driver_source = None

    async def before_body(self):
        self.session = AsyncProxySession(self)

    def reformat(self, a_sectors):
        bolshoi_tickets_reformat_dict = {
            # Историческая сцена
            'Партер, левая сторона': 'Партер Левая сторона',
            'Партер, правая сторона': 'Партер Правая сторона',
            'Балкон 4 яруса, левая сторона': 'Балкон 4 яруса Левая сторона',
            'Балкон 4 яруса, правая сторона': 'Балкон 4 яруса Правая сторона',
            'Балкон 3 яруса, левая сторона': 'Балкон 3 яруса',
            'Балкон 3 яруса, правая сторона': 'Балкон 3 яруса',
            'Балкон 2 яруса, левая сторона': 'Балкон 2 яруса Левая сторона',
            'Балкон 2 яруса, правая сторона': 'Балкон 2 яруса Правая сторона',
            '3 ярус, левая сторона Ложа № 1': '3 ярус Левая сторона Ложа № 1',
            '3 ярус, левая сторона Ложа № 2': '3 ярус Левая сторона Ложа № 2',
            '3 ярус, левая сторона Ложа № 3': '3 ярус Левая сторона Ложа № 3',
            '3 ярус, левая сторона Ложа № 4': '3 ярус Левая сторона Ложа № 4',
            '3 ярус, левая сторона Ложа № 5': '3 ярус Левая сторона Ложа № 5',
            '3 ярус, левая сторона Ложа № 6': '3 ярус Левая сторона Ложа № 6',
            '3 ярус, левая сторона Ложа № 7': '3 ярус Левая сторона Ложа № 7',
            '3 ярус, левая сторона Ложа № 8': '3 ярус Левая сторона Ложа № 8',
            '3 ярус, левая сторона Ложа № 9': '3 ярус Левая сторона Ложа № 9',
            '3 ярус, правая сторона Ложа № 1': '3 ярус Правая сторона Ложа № 1',
            '3 ярус, правая сторона Ложа № 2': '3 ярус Правая сторона Ложа № 2',
            '3 ярус, правая сторона Ложа № 3': '3 ярус Правая сторона Ложа № 3',
            '3 ярус, правая сторона Ложа № 4': '3 ярус Правая сторона Ложа № 4',
            '3 ярус, правая сторона Ложа № 5': '3 ярус Правая сторона Ложа № 5',
            '3 ярус, правая сторона Ложа № 6': '3 ярус Правая сторона Ложа № 6',
            '3 ярус, правая сторона Ложа № 7': '3 ярус Правая сторона Ложа № 7',
            '3 ярус, правая сторона Ложа № 8': '3 ярус Правая сторона Ложа № 8',
            '3 ярус, правая сторона Ложа № 9': '3 ярус Правая сторона Ложа № 9',
            '2 ярус, левая сторона Ложа № 1': '2 ярус Левая сторона Ложа № 1',
            '2 ярус, левая сторона Ложа № 2': '2 ярус Левая сторона Ложа № 2',
            '2 ярус, левая сторона Ложа № 3': '2 ярус Левая сторона Ложа № 3',
            '2 ярус, левая сторона Ложа № 4': '2 ярус Левая сторона Ложа № 4',
            '2 ярус, левая сторона Ложа № 5': '2 ярус Левая сторона Ложа № 5',
            '2 ярус, левая сторона Ложа № 6': '2 ярус Левая сторона Ложа № 6',
            '2 ярус, левая сторона Ложа № 7': '2 ярус Левая сторона Ложа № 7',
            '2 ярус, левая сторона Ложа № 8': '2 ярус Левая сторона Ложа № 8',
            '2 ярус, левая сторона Ложа № 9': '2 ярус Левая сторона Ложа № 9',
            '2 ярус, правая сторона Ложа № 1': '2 ярус Правая сторона Ложа № 1',
            '2 ярус, правая сторона Ложа № 2': '2 ярус Правая сторона Ложа № 2',
            '2 ярус, правая сторона Ложа № 3': '2 ярус Правая сторона Ложа № 3',
            '2 ярус, правая сторона Ложа № 4': '2 ярус Правая сторона Ложа № 4',
            '2 ярус, правая сторона Ложа № 5': '2 ярус Правая сторона Ложа № 5',
            '2 ярус, правая сторона Ложа № 6': '2 ярус Правая сторона Ложа № 6',
            '2 ярус, правая сторона Ложа № 7': '2 ярус Правая сторона Ложа № 7',
            '2 ярус, правая сторона Ложа № 8': '2 ярус Правая сторона Ложа № 8',
            '2 ярус, правая сторона Ложа № 9': '2 ярус Правая сторона Ложа № 9',
            '1 ярус, левая сторона Ложа № 1': '1 ярус Левая сторона Ложа № 1',
            '1 ярус, левая сторона Ложа № 2': '1 ярус Левая сторона Ложа № 2',
            '1 ярус, левая сторона Ложа № 3': '1 ярус Левая сторона Ложа № 3',
            '1 ярус, левая сторона Ложа № 4': '1 ярус Левая сторона Ложа № 4',
            '1 ярус, левая сторона Ложа № 5': '1 ярус Левая сторона Ложа № 5',
            '1 ярус, левая сторона Ложа № 6': '1 ярус Левая сторона Ложа № 6',
            '1 ярус, левая сторона Ложа № 7': '1 ярус Левая сторона Ложа № 7',
            '1 ярус, левая сторона Ложа № 8': '1 ярус Левая сторона Ложа № 8',
            '1 ярус, левая сторона Ложа № 9': '1 ярус Левая сторона Ложа № 9',
            '1 ярус, левая сторона Ложа № 10': '1 ярус Левая сторона Ложа № 10',
            '1 ярус, левая сторона Ложа № 11': '1 ярус Левая сторона Ложа № 11',
            '1 ярус, левая сторона': '1 ярус Левая сторона Ложа № 12',
            '1 ярус, правая сторона Ложа № 1': '1 ярус Правая сторона Ложа № 1',
            '1 ярус, правая сторона Ложа № 2': '1 ярус Правая сторона Ложа № 2',
            '1 ярус, правая сторона Ложа № 3': '1 ярус Правая сторона Ложа № 3',
            '1 ярус, правая сторона Ложа № 4': '1 ярус Правая сторона Ложа № 4',
            '1 ярус, правая сторона Ложа № 5': '1 ярус Правая сторона Ложа № 5',
            '1 ярус, правая сторона Ложа № 6': '1 ярус Правая сторона Ложа № 6',
            '1 ярус, правая сторона Ложа № 7': '1 ярус Правая сторона Ложа № 7',
            '1 ярус, правая сторона Ложа № 8': '1 ярус Правая сторона Ложа № 8',
            '1 ярус, правая сторона Ложа № 9': '1 ярус Правая сторона Ложа № 9',
            '1 ярус, правая сторона Ложа № 10': '1 ярус Правая сторона Ложа № 10',
            '1 ярус, правая сторона Ложа № 11': '1 ярус Правая сторона Ложа № 11',
            '1 ярус, правая сторона': '1 ярус Правая сторона Ложа № 12',
            'Бельэтаж, левая сторона Ложа № 1': 'Бельэтаж Левая сторона Ложа № 1',
            'Бельэтаж, левая сторона Ложа № 2': 'Бельэтаж Левая сторона Ложа № 2',
            'Бельэтаж, левая сторона Ложа № 3': 'Бельэтаж Левая сторона Ложа № 3',
            'Бельэтаж, левая сторона Ложа № 4': 'Бельэтаж Левая сторона Ложа № 4',
            'Бельэтаж, левая сторона Ложа № 5': 'Бельэтаж Левая сторона Ложа № 5',
            'Бельэтаж, левая сторона Ложа № 6': 'Бельэтаж Левая сторона Ложа № 6',
            'Бельэтаж, левая сторона Ложа № 7': 'Бельэтаж Левая сторона Ложа № 7',
            'Бельэтаж, левая сторона Ложа № 8': 'Бельэтаж Левая сторона Ложа № 8',
            'Бельэтаж, левая сторона Ложа № 9': 'Бельэтаж Левая сторона Ложа № 9',
            'Бельэтаж, левая сторона Ложа № 10': 'Бельэтаж Левая сторона Ложа № 10',
            'Бельэтаж, левая сторона Ложа № 11': 'Бельэтаж Левая сторона Ложа № 11',
            'Бельэтаж, левая сторона Ложа № 12': 'Бельэтаж Левая сторона Ложа № 12',
            'Бельэтаж, левая сторона Ложа № 13': 'Бельэтаж Левая сторона Ложа № 13',
            'Бельэтаж, левая сторона Ложа № 14': 'Бельэтаж Левая сторона Ложа № 14',
            'Бельэтаж, левая сторона Ложа № 15': 'Бельэтаж Левая сторона Ложа № 15',
            'Бельэтаж, правая сторона Ложа № 1': 'Бельэтаж Правая сторона Ложа № 1',
            'Бельэтаж, правая сторона Ложа № 2': 'Бельэтаж Правая сторона Ложа № 2',
            'Бельэтаж, правая сторона Ложа № 3': 'Бельэтаж Правая сторона Ложа № 3',
            'Бельэтаж, правая сторона Ложа № 4': 'Бельэтаж Правая сторона Ложа № 4',
            'Бельэтаж, правая сторона Ложа № 5': 'Бельэтаж Правая сторона Ложа № 5',
            'Бельэтаж, правая сторона Ложа № 6': 'Бельэтаж Правая сторона Ложа № 6',
            'Бельэтаж, правая сторона Ложа № 7': 'Бельэтаж Правая сторона Ложа № 7',
            'Бельэтаж, правая сторона Ложа № 8': 'Бельэтаж Правая сторона Ложа № 8',
            'Бельэтаж, правая сторона Ложа № 9': 'Бельэтаж Правая сторона Ложа № 9',
            'Бельэтаж, правая сторона Ложа № 10': 'Бельэтаж Правая сторона Ложа № 10',
            'Бельэтаж, правая сторона Ложа № 11': 'Бельэтаж Правая сторона Ложа № 11',
            'Бельэтаж, правая сторона Ложа № 12': 'Бельэтаж Правая сторона Ложа № 12',
            'Бельэтаж, правая сторона Ложа № 13': 'Бельэтаж Правая сторона Ложа № 13',
            'Бельэтаж, правая сторона Ложа № 14': 'Бельэтаж Правая сторона Ложа № 14',
            'Бельэтаж, правая сторона Ложа № 15': 'Бельэтаж Правая сторона Ложа № 15',
            'Амфитеатр, левая сторона': 'Амфитеатр Левая сторона',
            'Амфитеатр, правая сторона': 'Амфитеатр Правая сторона',
            'Бенуар, левая сторона Ложа № 1': 'Бенуар Левая сторона Ложа № 1',
            'Бенуар, левая сторона Ложа № 2': 'Бенуар Левая сторона Ложа № 2',
            'Бенуар, левая сторона Ложа № 3': 'Бенуар Левая сторона Ложа № 3',
            'Бенуар, левая сторона Ложа № 4': 'Бенуар Левая сторона Ложа № 4',
            'Бенуар, левая сторона Ложа № 5': 'Бенуар Левая сторона Ложа № 5',
            'Бенуар, левая сторона Ложа № 6': 'Бенуар Левая сторона Ложа № 6',
            'Бенуар, левая сторона Ложа № 7': 'Бенуар Левая сторона Ложа № 7',
            'Бенуар, левая сторона Ложа № 8': 'Бенуар Левая сторона Ложа № 8',
            'Бенуар, правая сторона Ложа № 1': 'Бенуар Правая сторона Ложа № 1',
            'Бенуар, правая сторона Ложа № 2': 'Бенуар Правая сторона Ложа № 2',
            'Бенуар, правая сторона Ложа № 3': 'Бенуар Правая сторона Ложа № 3',
            'Бенуар, правая сторона Ложа № 4': 'Бенуар Правая сторона Ложа № 4',
            'Бенуар, правая сторона Ложа № 5': 'Бенуар Правая сторона Ложа № 5',
            'Бенуар, правая сторона Ложа № 6': 'Бенуар Правая сторона Ложа № 6',
            'Бенуар, правая сторона Ложа № 7': 'Бенуар Правая сторона Ложа № 7',
            'Бенуар, правая сторона Ложа № 8': 'Бенуар Правая сторона Ложа № 8'
        }
        bolshoi_tickets_reformat_dict_new_scene = {
            # Новая сцена
            'Партер, левая сторона': 'Партер, левая сторона',
            'Партер, правая сторона': 'Партер, правая сторона',
            'Амфитеатр, левая сторона': 'Амфитеатр, левая сторона',
            'Амфитеатр, правая сторона': 'Амфитеатр, правая сторона',
            'Бенуар, левая сторона Ложа 1': 'Бенуар,  левая сторона Ложа 1',
            'Бенуар, правая сторона Ложа 1': 'Бенуар, правая сторона Ложа 1',
            'Бенуар, левая сторона': 'Бенуар, левая сторона',
            'Бенуар, правая сторона': 'Бенуар, правая сторона',
            'Бельэтаж, правая сторона Ложа 1': 'Бельэтаж, правая сторона Ложа 1',
            'Бельэтаж, левая сторона': 'Бельэтаж, левая сторона',
            'Бельэтаж, правая сторона': 'Бельэтаж, правая сторона',
            '1 ярус, левая сторона Ложа 1': 'Первый ярус, левая сторона Ложа 1',
            '1 ярус, правая сторона Ложа 1': 'Первый ярус, правая сторона Ложа 1',
            '1 ярус, левая сторона': 'Первый ярус, левая сторона',
            '1 ярус, правая сторона': 'Первый ярус, правая сторона'
        }

        ref_dict = {}
        if 'большой театр' in self.venue.lower():
            if "Новая сцена" in self.scene:
                ref_dict = bolshoi_tickets_reformat_dict_new_scene
            else:
                ref_dict = bolshoi_tickets_reformat_dict

        for sector in a_sectors:
            sector['name'] = ref_dict.get(sector['name'], sector['name'])

    def reformat_big_th(self, a_sectors):
        bolshoi_tickets_reformat_dict = {
            # Историческая сцена
            'Партер, левая сторона': 'Партер Левая сторона',
            'Партер, правая сторона': 'Партер Правая сторона',
            'Балкон 4 яруса, левая сторона': 'Балкон 4 яруса Левая сторона',
            'Балкон 4 яруса, правая сторона': 'Балкон 4 яруса Правая сторона',
            'Балкон 3 яруса, левая сторона': 'Балкон 3 яруса',
            'Балкон 3 яруса, правая сторона': 'Балкон 3 яруса',
            'Балкон 2 яруса, левая сторона': 'Балкон 2 яруса Левая сторона',
            'Балкон 2 яруса, правая сторона': 'Балкон 2 яруса Правая сторона',
            '3 ярус, левая сторона Ложа № 1': '3 ярус Левая сторона Ложа № 1',
            '3 ярус, левая сторона Ложа № 2': '3 ярус Левая сторона Ложа № 2',
            '3 ярус, левая сторона Ложа № 3': '3 ярус Левая сторона Ложа № 3',
            '3 ярус, левая сторона Ложа № 4': '3 ярус Левая сторона Ложа № 4',
            '3 ярус, левая сторона Ложа № 5': '3 ярус Левая сторона Ложа № 5',
            '3 ярус, левая сторона Ложа № 6': '3 ярус Левая сторона Ложа № 6',
            '3 ярус, левая сторона Ложа № 7': '3 ярус Левая сторона Ложа № 7',
            '3 ярус, левая сторона Ложа № 8': '3 ярус Левая сторона Ложа № 8',
            '3 ярус, левая сторона Ложа № 9': '3 ярус Левая сторона Ложа № 9',
            '3 ярус, правая сторона Ложа № 1': '3 ярус Правая сторона Ложа № 1',
            '3 ярус, правая сторона Ложа № 2': '3 ярус Правая сторона Ложа № 2',
            '3 ярус, правая сторона Ложа № 3': '3 ярус Правая сторона Ложа № 3',
            '3 ярус, правая сторона Ложа № 4': '3 ярус Правая сторона Ложа № 4',
            '3 ярус, правая сторона Ложа № 5': '3 ярус Правая сторона Ложа № 5',
            '3 ярус, правая сторона Ложа № 6': '3 ярус Правая сторона Ложа № 6',
            '3 ярус, правая сторона Ложа № 7': '3 ярус Правая сторона Ложа № 7',
            '3 ярус, правая сторона Ложа № 8': '3 ярус Правая сторона Ложа № 8',
            '3 ярус, правая сторона Ложа № 9': '3 ярус Правая сторона Ложа № 9',
            '2 ярус, левая сторона Ложа № 1': '2 ярус Левая сторона Ложа № 1',
            '2 ярус, левая сторона Ложа № 2': '2 ярус Левая сторона Ложа № 2',
            '2 ярус, левая сторона Ложа № 3': '2 ярус Левая сторона Ложа № 3',
            '2 ярус, левая сторона Ложа № 4': '2 ярус Левая сторона Ложа № 4',
            '2 ярус, левая сторона Ложа № 5': '2 ярус Левая сторона Ложа № 5',
            '2 ярус, левая сторона Ложа № 6': '2 ярус Левая сторона Ложа № 6',
            '2 ярус, левая сторона Ложа № 7': '2 ярус Левая сторона Ложа № 7',
            '2 ярус, левая сторона Ложа № 8': '2 ярус Левая сторона Ложа № 8',
            '2 ярус, левая сторона Ложа № 9': '2 ярус Левая сторона Ложа № 9',
            '2 ярус, правая сторона Ложа № 1': '2 ярус Правая сторона Ложа № 1',
            '2 ярус, правая сторона Ложа № 2': '2 ярус Правая сторона Ложа № 2',
            '2 ярус, правая сторона Ложа № 3': '2 ярус Правая сторона Ложа № 3',
            '2 ярус, правая сторона Ложа № 4': '2 ярус Правая сторона Ложа № 4',
            '2 ярус, правая сторона Ложа № 5': '2 ярус Правая сторона Ложа № 5',
            '2 ярус, правая сторона Ложа № 6': '2 ярус Правая сторона Ложа № 6',
            '2 ярус, правая сторона Ложа № 7': '2 ярус Правая сторона Ложа № 7',
            '2 ярус, правая сторона Ложа № 8': '2 ярус Правая сторона Ложа № 8',
            '2 ярус, правая сторона Ложа № 9': '2 ярус Правая сторона Ложа № 9',
            '1 ярус, левая сторона Ложа № 1': '1 ярус Левая сторона Ложа № 1',
            '1 ярус, левая сторона Ложа № 2': '1 ярус Левая сторона Ложа № 2',
            '1 ярус, левая сторона Ложа № 3': '1 ярус Левая сторона Ложа № 3',
            '1 ярус, левая сторона Ложа № 4': '1 ярус Левая сторона Ложа № 4',
            '1 ярус, левая сторона Ложа № 5': '1 ярус Левая сторона Ложа № 5',
            '1 ярус, левая сторона Ложа № 6': '1 ярус Левая сторона Ложа № 6',
            '1 ярус, левая сторона Ложа № 7': '1 ярус Левая сторона Ложа № 7',
            '1 ярус, левая сторона Ложа № 8': '1 ярус Левая сторона Ложа № 8',
            '1 ярус, левая сторона Ложа № 9': '1 ярус Левая сторона Ложа № 9',
            '1 ярус, левая сторона Ложа № 10': '1 ярус Левая сторона Ложа № 10',
            '1 ярус, левая сторона Ложа № 11': '1 ярус Левая сторона Ложа № 11',
            '1 ярус, левая сторона': '1 ярус Левая сторона Ложа № 12',
            '1 ярус, правая сторона Ложа № 1': '1 ярус Правая сторона Ложа № 1',
            '1 ярус, правая сторона Ложа № 2': '1 ярус Правая сторона Ложа № 2',
            '1 ярус, правая сторона Ложа № 3': '1 ярус Правая сторона Ложа № 3',
            '1 ярус, правая сторона Ложа № 4': '1 ярус Правая сторона Ложа № 4',
            '1 ярус, правая сторона Ложа № 5': '1 ярус Правая сторона Ложа № 5',
            '1 ярус, правая сторона Ложа № 6': '1 ярус Правая сторона Ложа № 6',
            '1 ярус, правая сторона Ложа № 7': '1 ярус Правая сторона Ложа № 7',
            '1 ярус, правая сторона Ложа № 8': '1 ярус Правая сторона Ложа № 8',
            '1 ярус, правая сторона Ложа № 9': '1 ярус Правая сторона Ложа № 9',
            '1 ярус, правая сторона Ложа № 10': '1 ярус Правая сторона Ложа № 10',
            '1 ярус, правая сторона Ложа № 11': '1 ярус Правая сторона Ложа № 11',
            '1 ярус, правая сторона': '1 ярус Правая сторона Ложа № 12',
            'Бельэтаж, левая сторона Ложа № 1': 'Бельэтаж Левая сторона Ложа № 1',
            'Бельэтаж, левая сторона Ложа № 2': 'Бельэтаж Левая сторона Ложа № 2',
            'Бельэтаж, левая сторона Ложа № 3': 'Бельэтаж Левая сторона Ложа № 3',
            'Бельэтаж, левая сторона Ложа № 4': 'Бельэтаж Левая сторона Ложа № 4',
            'Бельэтаж, левая сторона Ложа № 5': 'Бельэтаж Левая сторона Ложа № 5',
            'Бельэтаж, левая сторона Ложа № 6': 'Бельэтаж Левая сторона Ложа № 6',
            'Бельэтаж, левая сторона Ложа № 7': 'Бельэтаж Левая сторона Ложа № 7',
            'Бельэтаж, левая сторона Ложа № 8': 'Бельэтаж Левая сторона Ложа № 8',
            'Бельэтаж, левая сторона Ложа № 9': 'Бельэтаж Левая сторона Ложа № 9',
            'Бельэтаж, левая сторона Ложа № 10': 'Бельэтаж Левая сторона Ложа № 10',
            'Бельэтаж, левая сторона Ложа № 11': 'Бельэтаж Левая сторона Ложа № 11',
            'Бельэтаж, левая сторона Ложа № 12': 'Бельэтаж Левая сторона Ложа № 12',
            'Бельэтаж, левая сторона Ложа № 13': 'Бельэтаж Левая сторона Ложа № 13',
            'Бельэтаж, левая сторона Ложа № 14': 'Бельэтаж Левая сторона Ложа № 14',
            'Бельэтаж, левая сторона Ложа № 15': 'Бельэтаж Левая сторона Ложа № 15',
            'Бельэтаж, правая сторона Ложа № 1': 'Бельэтаж Правая сторона Ложа № 1',
            'Бельэтаж, правая сторона Ложа № 2': 'Бельэтаж Правая сторона Ложа № 2',
            'Бельэтаж, правая сторона Ложа № 3': 'Бельэтаж Правая сторона Ложа № 3',
            'Бельэтаж, правая сторона Ложа № 4': 'Бельэтаж Правая сторона Ложа № 4',
            'Бельэтаж, правая сторона Ложа № 5': 'Бельэтаж Правая сторона Ложа № 5',
            'Бельэтаж, правая сторона Ложа № 6': 'Бельэтаж Правая сторона Ложа № 6',
            'Бельэтаж, правая сторона Ложа № 7': 'Бельэтаж Правая сторона Ложа № 7',
            'Бельэтаж, правая сторона Ложа № 8': 'Бельэтаж Правая сторона Ложа № 8',
            'Бельэтаж, правая сторона Ложа № 9': 'Бельэтаж Правая сторона Ложа № 9',
            'Бельэтаж, правая сторона Ложа № 10': 'Бельэтаж Правая сторона Ложа № 10',
            'Бельэтаж, правая сторона Ложа № 11': 'Бельэтаж Правая сторона Ложа № 11',
            'Бельэтаж, правая сторона Ложа № 12': 'Бельэтаж Правая сторона Ложа № 12',
            'Бельэтаж, правая сторона Ложа № 13': 'Бельэтаж Правая сторона Ложа № 13',
            'Бельэтаж, правая сторона Ложа № 14': 'Бельэтаж Правая сторона Ложа № 14',
            'Бельэтаж, правая сторона Ложа № 15': 'Бельэтаж Правая сторона Ложа № 15',
            'Амфитеатр, левая сторона': 'Амфитеатр Левая сторона',
            'Амфитеатр, правая сторона': 'Амфитеатр Правая сторона',
            'Бенуар, левая сторона Ложа № 1': 'Бенуар Левая сторона Ложа № 1',
            'Бенуар, левая сторона Ложа № 2': 'Бенуар Левая сторона Ложа № 2',
            'Бенуар, левая сторона Ложа № 3': 'Бенуар Левая сторона Ложа № 3',
            'Бенуар, левая сторона Ложа № 4': 'Бенуар Левая сторона Ложа № 4',
            'Бенуар, левая сторона Ложа № 5': 'Бенуар Левая сторона Ложа № 5',
            'Бенуар, левая сторона Ложа № 6': 'Бенуар Левая сторона Ложа № 6',
            'Бенуар, левая сторона Ложа № 7': 'Бенуар Левая сторона Ложа № 7',
            'Бенуар, левая сторона Ложа № 8': 'Бенуар Левая сторона Ложа № 8',
            'Бенуар, правая сторона Ложа № 1': 'Бенуар Правая сторона Ложа № 1',
            'Бенуар, правая сторона Ложа № 2': 'Бенуар Правая сторона Ложа № 2',
            'Бенуар, правая сторона Ложа № 3': 'Бенуар Правая сторона Ложа № 3',
            'Бенуар, правая сторона Ложа № 4': 'Бенуар Правая сторона Ложа № 4',
            'Бенуар, правая сторона Ложа № 5': 'Бенуар Правая сторона Ложа № 5',
            'Бенуар, правая сторона Ложа № 6': 'Бенуар Правая сторона Ложа № 6',
            'Бенуар, правая сторона Ложа № 7': 'Бенуар Правая сторона Ложа № 7',
            'Бенуар, правая сторона Ложа № 8': 'Бенуар Правая сторона Ложа № 8'
        }
        bolshoi_tickets_reformat_dict_new_scene = {
            # Новая сцена
            'Партер, левая сторона': 'Партер, левая сторона',
            'Партер, правая сторона': 'Партер, правая сторона',
            'Амфитеатр, левая сторона': 'Амфитеатр, левая сторона',
            'Амфитеатр, правая сторона': 'Амфитеатр, правая сторона',
            'Бенуар, левая сторона Ложа 1': 'Бенуар,  левая сторона Ложа 1',
            'Бенуар, правая сторона Ложа 1': 'Бенуар, правая сторона Ложа 1',
            'Бенуар, левая сторона': 'Бенуар, левая сторона',
            'Бенуар, правая сторона': 'Бенуар, правая сторона',
            'Бельэтаж, правая сторона Ложа 1': 'Бельэтаж, правая сторона Ложа 1',
            'Бельэтаж, левая сторона': 'Бельэтаж, левая сторона',
            'Бельэтаж, правая сторона': 'Бельэтаж, правая сторона',
            '1 ярус, левая сторона Ложа 1': 'Первый ярус, левая сторона Ложа 1',
            '1 ярус, правая сторона Ложа 1': 'Первый ярус, правая сторона Ложа 1',
            '1 ярус, левая сторона': 'Первый ярус, левая сторона',
            '1 ярус, правая сторона': 'Первый ярус, правая сторона'
        }

        if "Новая сцена" in self.scene:
            ref_dict = bolshoi_tickets_reformat_dict_new_scene
        else:
            ref_dict = bolshoi_tickets_reformat_dict

        for sector in a_sectors:
            if "Новая сцена" not in self.scene and 'Партер' == sector['name']:
                sector['name'] = 'Партер Левая сторона'
                a_sectors.append(
                    {
                        "name": 'Партер Правая сторона',
                        "tickets": sector['tickets']
                    }
                )
            elif "Новая сцена" not in self.scene and 'Амфитеатр' == sector['name']:
                sector['name'] = 'Амфитеатр Левая сторона'
                a_sectors.append(
                    {
                        "name": 'Амфитеатр Правая сторона',
                        "tickets": sector['tickets']
                    }
                )
            elif "Новая сцена" in self.scene and 'Партер' == sector['name']:
                sector['name'] = 'Партер Левая сторона'
                a_sectors.append(
                    {
                        "name": 'Партер Правая сторона',
                        "tickets": sector['tickets']
                    }
                )
            elif "Новая сцена" in self.scene and 'Амфитеатр' == sector['name']:
                sector['name'] = 'Амфитеатр Левая сторона'
                a_sectors.append(
                    {
                        "name": 'Амфитеатр Правая сторона',
                        "tickets": sector['tickets']
                    }
                )
            elif "Новая сцена" in self.scene and 'Первый ярус' == sector['name']:
                sector['name'] = 'Первый ярус, левая сторона'
                a_sectors.append(
                    {
                        "name": 'Первый ярус, правая сторона',
                        "tickets": sector['tickets']
                    }
                )
            elif "Новая сцена" in self.scene and 'Бельэтаж' == sector['name']:
                sector['name'] = 'Бельэтаж, левая сторона'
                a_sectors.append(
                    {
                        "name": 'Бельэтаж, правая сторона',
                        "tickets": sector['tickets']
                    }
                )
            else:
                sector['name'] = ref_dict.get(sector['name'], sector['name'])

    def reformat_row(self, row, seat, sector_name):
        loz_row = row
        if not row or row == 'None':
            loz_row = '1'
        if 'Ложа' in sector_name:
            if 'Бенуар' in sector_name:
                if seat in ['1', '3', '5']:
                    loz_row = '1'
                else:
                    loz_row = '2'
            elif 'Бельэтаж' in sector_name:
                if seat in ['1', '3', '5']:
                    loz_row = '1'
                elif seat in ['2', '4', '6']:
                    loz_row = '2'
                else:
                    loz_row = '3'
            elif '1 ярус' in sector_name:
                if '1 ярус Левая сторона Ложа № 1' == sector_name:
                    if seat in ['1', '2', '3', '5', '7']:
                        loz_row = '1'
                    elif seat in ['4', '6', '8']:
                        loz_row = '2'
                elif '№ 10' in sector_name or '№ 11' in sector_name:
                    if seat in ['1', '3', '5']:
                        loz_row = '1'
                    elif seat in ['2', '4', '6']:
                        loz_row = '2'
                    else:
                        loz_row = '3'
                elif '№ 12' in sector_name:
                    pass
                else:
                    if seat in ['1', '3', '5']:
                        loz_row = '1'
                    else:
                        loz_row = '2'
            elif '2 ярус' in sector_name:
                if '№ 7' in sector_name or '№ 8' in sector_name or '№ 9' in sector_name:
                    if seat in ['1', '3', '5']:
                        loz_row = '1'
                    else:
                        loz_row = '2'
                else:
                    loz_row = '1'
            elif '3 ярус' in sector_name:
                loz_row = '1'
        if self.scene == 'Новая сцена':
            if 'Бенуар' in sector_name:
                loz_row = '1'
        return loz_row
    
    def reformat_nickulin(self, a_sectors):
        new_a_seats = []
        for event in a_sectors:
            if 'амфитеатр, левая сторона' in event['name']:
                new_a_seats.append({
                    'name': 'Амфитеатр левая сторона',
                    'tickets': event['tickets']
                })
            elif 'партер, правая сторона' in event['name']:
                new_a_seats.append({
                    'name': 'Партер правая сторона',
                    'tickets': event['tickets']
                })
            elif 'амфитеатр, правая сторона' in event['name']:
                new_a_seats.append({
                    'name': 'Амфитеатр правая сторона',
                    'tickets': event['tickets']
                })
            elif 'партер, левая сторона' in event['name']:
                new_a_seats.append({
                    'name': 'Партер левая сторона',
                    'tickets': event['tickets']
                })
            elif 'ожа партера' in event['name']:
                new_a_seats.append({
                    'name': 'Ложа партера',
                    'tickets': event['tickets']
                })
            elif 'ложа амфитеатра' in event['name']:
                new_a_seats.append({
                    'name': 'Ложа амфитеатра',
                    'tickets': event['tickets']
                })
            else:
                new_a_seats.append({
                    'name': event['name'],
                    'tickets': event['tickets']
                })
        return new_a_seats    
    
    @staticmethod
    def reformat_vernadskii(a_sectors):
        new_a_sectors = []
        for event in a_sectors:
            name = event['name'].split()
            name = ' '.join(name[:2])
            new_a_sectors.append({
                'name': name,
                'tickets': event['tickets']
            })
        return new_a_sectors
    
    @staticmethod
    def reformat_vahtang(a_sectors):
        new_a_sectors = []
        for event in a_sectors:
            name = event['name']

            if 'правая ложа бенуара' in event['name']:
                number = name.split()[3]
                name = f"Ложа бенуара {number} правая сторона"

            elif 'левая ложа бенуара' in event['name']:
                number = name.split()[3]
                name = f"Ложа бенуара {number} левая сторона"

            elif 'правая ложа бельэтажа' in event['name']:
                number = name.split()[-1]
                name = f"Ложа бельэтажа {number} правая сторона"

            elif 'левая ложа бельэтажа' in event['name']:
                number = name.split()[-1]
                name = f"Ложа бельэтажа {number} левая сторона"

            elif 'правая ложа балкона' in event['name']:
                number = name.split()[3]
                name = f"Ложа балкона {number} правая сторона"
            
            elif 'левая ложа балкона' in event['name']:
                number = name.split()[3]
                name = f"Ложа балкона {number} левая сторона"

            elif 'балкон' in event['name'].lower():
                name = f"Балкон"

            new_a_sectors.append({
                    'name': name,
                    'tickets': event['tickets']
                })
            
        return new_a_sectors
    
    @staticmethod
    def reformat_mhat_chehkov(a_sectors):
        new_a_sectors = []
        for event in a_sectors:
            name = event['name'].lower()

            if 'ожа бенуара правая' in name:
                name = "Бенуар, ложа правая"
            elif 'ожа бенуара левая' in name:
                name = "Бенуар, ложа левая"
            elif 'ожа бельэтажа 1 правая' in name:
                name = "Бельэтаж, ложа правая"
            elif 'ожа бельэтажа 1 левая' in name:
                name = "Бельэтаж, ложа левая"
            elif 'бельэтаж середина' in name:
                name = "Бельэтаж, середина"
            elif 'бельэтаж правая сторона' in name:
                name = "Бельэтаж, правая сторона"
            elif 'бельэтаж левая сторона' in name:
                name = "Бельэтаж, левая сторона"
            elif 'балкон середина' in name:
                name = "Балкон, середина"
            elif 'балкон левая сторона' in name:
                name = "Балкон, левая сторона"
            elif 'балкон правая сторона' in name:
                name = "Балкон, правая сторона"
         
            new_a_sectors.append({
                    'name': name,
                    'tickets': event['tickets']
                })
            
        return new_a_sectors
    
    @staticmethod
    def reformat_stanislavskii(a_sectors):
        new_a_sectors = []
        for event in a_sectors:
            name = event['name']

            if 'ожа бенуара' in event['name']:
                number = event['name'].split()[2]
                name = f"Ложа {number}"

            new_a_sectors.append({
                    'name': name,
                    'tickets': event['tickets']
                })
            
        return new_a_sectors
    
    @staticmethod
    def reformat_ramt(a_sectors):
        new_a_sectors = []
        new_dict_a_sectors = {}
        for event in a_sectors:
            name = event['name']
            if 'партер' in name.lower():
                for ticket, price in event['tickets'].items():
                    row = int(ticket[0])
                    seat = int(ticket[1])
                    if row in [1,2,6,7,8]:
                        if seat <= 5:
                            name = 'Партер, правая сторона'
                        elif seat >= 23:
                            name = 'Партер, левая сторона'
                        else:
                            name = 'Партер, середина'
                    elif row in [5,4]:
                        if seat <= 6:
                            name = 'Партер, правая сторона'
                        elif seat >= 24:
                            name = 'Партер, левая сторона'
                        else:
                            name = 'Партер, середина'
                    elif row in (range(9,18)):
                        name = 'Партер'
                    new_dict_a_sectors.setdefault(name, {}).update({
                        (str(row), str(seat)): price
                    })
            
            elif 'бельэтаж' in name.lower():
                for ticket, price in event['tickets'].items():
                    row = int(ticket[0])
                    seat = int(ticket[1])
                    if row == 3:
                        name = 'Бельэтаж, середина'
                    elif row == 2:
                        if seat <= 10:
                            name = 'Бельэтаж, правая сторона'
                        elif seat >= 30:
                            name = 'Бельэтаж, левая сторона'
                        else:
                            name = 'Бельэтаж, середина'
                    elif row == 1:
                        if seat <= 19:
                            name = 'Бельэтаж, левая сторона'
                        elif seat >= 37:
                            name = 'Бельэтаж, правая сторона'
                        else:
                            name = 'Бельэтаж, середина'
                    new_dict_a_sectors.setdefault(name, {}).update({
                        (str(row), str(seat)): price
                    })
                
            elif 'балкон' in name.lower():
                for ticket, price in event['tickets'].items():
                    row = int(ticket[0])
                    seat = int(ticket[1])
                    if row == 1:
                        if seat <= 10:
                            name = '1 ярус, правая сторона, места с ограниченной видимостью'
                        elif seat >= 30:
                            name = '1 ярус, левая сторона, места с ограниченной видимостью'
                        else:
                            name = '1 ярус, середина'
                    if row == 2:
                        if seat <= 9:
                            name = '1 ярус, правая сторона, места с ограниченной видимостью'
                        elif seat >= 31:
                            name = '1 ярус, левая сторона, места с ограниченной видимостью'
                        else:
                            name = '1 ярус, середина'
                    new_dict_a_sectors.setdefault(name, {}).update({
                        (str(row), str(seat)): price
                    })

        for name, tickets in new_dict_a_sectors.items():
            new_a_sectors.append({
                    'name': name,
                    'tickets': tickets
                })
            
        return new_a_sectors

    @staticmethod
    def reformat_maly(a_sectors):
        new_a_sectors = []
        for event in a_sectors:
            name = event['name']

            if 'балкон' in event['name'].lower():
                number = re.search(r'\d+(?=\-ого)', event['name'])[0]
                if number == '1':
                    name = f"Балкон первого яруса"
                elif number == '2':
                    name = f"Балкон второго яруса"

            new_a_sectors.append({
                    'name': name,
                    'tickets': event['tickets']
                })
        return new_a_sectors

    async def parse_seats(self):
        total_sector = []

        anons_id = self.url.split('/')[-2]
        url = f'https://www.bilettorg.ru/ajax/tickets.php?anons_id={anons_id}'
        soup = await self.requests_to_seats(url)

        all_sector = {}
        all_row_in_event = soup.select('li.buy-tickets__places-row')
        all_row_in_event = [el for el in all_row_in_event if not el.has_attr('style')]
        for sector_row in all_row_in_event:
            sector_name, price = sector_row.find('h2', class_='buy-tickets__places-title').text.strip().split(' - ')
            price = price.split()[1]
            price = int(price)

            list_double_sectors = []
            data_in_sector_name = sector_name.replace(',', '').split()
            if 'балкон' in data_in_sector_name:
                try:
                    number_level = double_split(sector_name, ', ', '-й')
                    if 'ПС' in data_in_sector_name:
                        sector_name = f'Балкон {number_level} яруса Правая сторона'
                    elif 'ЛС' in data_in_sector_name:
                        sector_name = f'Балкон {number_level} яруса Левая сторона'
                    else:
                        if '4' == str(number_level):
                            list_double_sectors.append(f'Балкон {number_level} яруса Левая сторона')
                            sector_name = f'Балкон {number_level} яруса Правая сторона'
                        else:
                            sector_name = f'Балкон {number_level} яруса'
                except:
                    ...
            elif 'бельэтажа' in data_in_sector_name:
                number_level = double_split(sector_name, 'бельэтажа ', ',')
                if 'ПС' in data_in_sector_name:
                    sector_name = f'Бельэтаж Правая сторона Ложа № {number_level}'
                elif 'ЛС' in data_in_sector_name:
                    sector_name = f'Бельэтаж Левая сторона Ложа № {number_level}'
            elif 'Партер' in data_in_sector_name:
                sector_name = 'Партер'
            elif 'Амфитеатр' in data_in_sector_name:
                sector_name = 'Амфитеатр'
            elif 'Бельэтаж' in data_in_sector_name:
                sector_name = 'Бельэтаж'
            elif 'ярус' in data_in_sector_name:
                sector_name = 'Первый ярус'
            elif 'бенуара' in data_in_sector_name:
                if self.scene == 'Новая сцена':
                    if 'ПС' in data_in_sector_name:
                        sector_name = 'Бенуар, правая сторона Ложа 1'
                    elif 'ЛС' in data_in_sector_name:
                        sector_name = 'Бенуар, левая сторона Ложа 1'
            elif 'ложа' in data_in_sector_name:
                if 'ПС' in data_in_sector_name:
                    sector_name = f'{data_in_sector_name[2]} ярус Правая сторона Ложа № {data_in_sector_name[1]}'
                elif 'ЛС' in data_in_sector_name:
                    sector_name = f'{data_in_sector_name[2]} ярус Левая сторона Ложа № {data_in_sector_name[1]}'

            if 'ряд' in data_in_sector_name:
                row_index = data_in_sector_name.index('ряд')
                seats_row = data_in_sector_name[row_index-1]
            else:
                seats_row = '1'

            seats_numbers = sector_row.select('li.buy-tickets__place p')

            for seats_number_element in seats_numbers:
                seats_number = seats_number_element.text.strip()

                seats_row = self.reformat_row(seats_row, seats_number, sector_name)

                all_sector.setdefault(sector_name, {}).update({
                    (seats_row, seats_number): price
                })

        for sector, total_seats_row_prices in all_sector.items():
            total_sector.append(
                {
                    "name": sector,
                    "tickets": total_seats_row_prices
                }
            )

        return total_sector

    async def requests_to_seats(self, url):
        headers = {
            'accept': '*/*',
            'accept-encoding': 'gzip, deflate, utf-8',
            'accept-language': 'ru,en;q=0.9',
            'connection': 'keep-alive',
            'host': 'www.bilettorg.ru',
            'referer': self.url,
            'sec-ch-ua': '"Chromium";v="110", "Not A(Brand";v="24", "Yandex";v="23"',
            'sec-ch-ua-mobile': '?0',
            'sec-ch-ua-platform': '"Windows"',
            'sec-fetch-dest': 'empty',
            'sec-fetch-mode': 'cors',
            'sec-fetch-site': 'same-origin',
            'user-agent': self.user_agent,
            'x-requested-with': 'XMLHttpRequest'
        }
        r = await self.session.get(url, headers=headers)
        return BeautifulSoup(r.text, 'lxml')

    async def body(self):
        a_sectors = await self.parse_seats()

        if self.venue in ['Большой театр']:
            self.reformat(a_sectors)
        elif 'цирк Юрия Никулина' in self.venue:
            a_sectors = self.reformat_nickulin(a_sectors)
        elif 'Цирк на Вернадского' in self.venue:
            a_sectors = self.reformat_vernadskii(a_sectors)
        elif 'Театр им. Евг. Вахтангова' in self.venue:
            a_sectors = self.reformat_vahtang(a_sectors)
        elif 'МХТ им. А.П. Чехова' in self.venue:
            a_sectors = self.reformat_mhat_chehkov(a_sectors)
        elif 'Станиславского и Вл.И. Немировича-Данченко'in self.venue:
            a_sectors = self.reformat_stanislavskii(a_sectors)
        elif 'Российский Молодежный театр' in self.venue:
            a_sectors = self.reformat_ramt(a_sectors)
        elif 'Малый театр России' in self.venue:
            a_sectors = self.reformat_maly(a_sectors)
        
        for sector in a_sectors:
            self.register_sector(sector['name'], sector['tickets'])